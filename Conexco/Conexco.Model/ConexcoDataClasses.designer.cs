#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Conexco.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Conexco")]
	public partial class ConexcoDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArticulo(Articulo instance);
    partial void UpdateArticulo(Articulo instance);
    partial void DeleteArticulo(Articulo instance);
    partial void InsertRemitos_Linea(Remitos_Linea instance);
    partial void UpdateRemitos_Linea(Remitos_Linea instance);
    partial void DeleteRemitos_Linea(Remitos_Linea instance);
    partial void InsertArticulos_Color(Articulos_Color instance);
    partial void UpdateArticulos_Color(Articulos_Color instance);
    partial void DeleteArticulos_Color(Articulos_Color instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertClientes_Contacto(Clientes_Contacto instance);
    partial void UpdateClientes_Contacto(Clientes_Contacto instance);
    partial void DeleteClientes_Contacto(Clientes_Contacto instance);
    partial void InsertClientes_Domicilio(Clientes_Domicilio instance);
    partial void UpdateClientes_Domicilio(Clientes_Domicilio instance);
    partial void DeleteClientes_Domicilio(Clientes_Domicilio instance);
    partial void InsertClientes_Telefono(Clientes_Telefono instance);
    partial void UpdateClientes_Telefono(Clientes_Telefono instance);
    partial void DeleteClientes_Telefono(Clientes_Telefono instance);
    partial void InsertClientes_Transportista(Clientes_Transportista instance);
    partial void UpdateClientes_Transportista(Clientes_Transportista instance);
    partial void DeleteClientes_Transportista(Clientes_Transportista instance);
    partial void InsertCondicionIVA(CondicionIVA instance);
    partial void UpdateCondicionIVA(CondicionIVA instance);
    partial void DeleteCondicionIVA(CondicionIVA instance);
    partial void InsertDocumentos_Estado(Documentos_Estado instance);
    partial void UpdateDocumentos_Estado(Documentos_Estado instance);
    partial void DeleteDocumentos_Estado(Documentos_Estado instance);
    partial void InsertDocumentos_Tipo(Documentos_Tipo instance);
    partial void UpdateDocumentos_Tipo(Documentos_Tipo instance);
    partial void DeleteDocumentos_Tipo(Documentos_Tipo instance);
    partial void InsertEgreso_Motivo(Egreso_Motivo instance);
    partial void UpdateEgreso_Motivo(Egreso_Motivo instance);
    partial void DeleteEgreso_Motivo(Egreso_Motivo instance);
    partial void InsertEgreso_Stock(Egreso_Stock instance);
    partial void UpdateEgreso_Stock(Egreso_Stock instance);
    partial void DeleteEgreso_Stock(Egreso_Stock instance);
    partial void InsertEmpresa(Empresa instance);
    partial void UpdateEmpresa(Empresa instance);
    partial void DeleteEmpresa(Empresa instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertFacturas_Linea(Facturas_Linea instance);
    partial void UpdateFacturas_Linea(Facturas_Linea instance);
    partial void DeleteFacturas_Linea(Facturas_Linea instance);
    partial void InsertLocalidade(Localidade instance);
    partial void UpdateLocalidade(Localidade instance);
    partial void DeleteLocalidade(Localidade instance);
    partial void InsertPresupuesto(Presupuesto instance);
    partial void UpdatePresupuesto(Presupuesto instance);
    partial void DeletePresupuesto(Presupuesto instance);
    partial void InsertPresupuestos_Linea(Presupuestos_Linea instance);
    partial void UpdatePresupuestos_Linea(Presupuestos_Linea instance);
    partial void DeletePresupuestos_Linea(Presupuestos_Linea instance);
    partial void InsertProvincia(Provincia instance);
    partial void UpdateProvincia(Provincia instance);
    partial void DeleteProvincia(Provincia instance);
    partial void InsertRemito(Remito instance);
    partial void UpdateRemito(Remito instance);
    partial void DeleteRemito(Remito instance);
    #endregion
		
		public ConexcoDataClassesDataContext() : 
				base(global::Conexco.Model.Properties.Settings.Default.ConexcoConString, mappingSource)
		{
			OnCreated();
		}
		
		public ConexcoDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexcoDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexcoDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexcoDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Articulo> Articulos
		{
			get
			{
				return this.GetTable<Articulo>();
			}
		}
		
		public System.Data.Linq.Table<Remitos_Linea> Remitos_Lineas
		{
			get
			{
				return this.GetTable<Remitos_Linea>();
			}
		}
		
		public System.Data.Linq.Table<Articulos_Color> Articulos_Colors
		{
			get
			{
				return this.GetTable<Articulos_Color>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Clientes_Contacto> Clientes_Contactos
		{
			get
			{
				return this.GetTable<Clientes_Contacto>();
			}
		}
		
		public System.Data.Linq.Table<Clientes_Domicilio> Clientes_Domicilios
		{
			get
			{
				return this.GetTable<Clientes_Domicilio>();
			}
		}
		
		public System.Data.Linq.Table<Clientes_Telefono> Clientes_Telefonos
		{
			get
			{
				return this.GetTable<Clientes_Telefono>();
			}
		}
		
		public System.Data.Linq.Table<Clientes_Transportista> Clientes_Transportistas
		{
			get
			{
				return this.GetTable<Clientes_Transportista>();
			}
		}
		
		public System.Data.Linq.Table<CondicionIVA> CondicionIVAs
		{
			get
			{
				return this.GetTable<CondicionIVA>();
			}
		}
		
		public System.Data.Linq.Table<Documentos_Estado> Documentos_Estados
		{
			get
			{
				return this.GetTable<Documentos_Estado>();
			}
		}
		
		public System.Data.Linq.Table<Documentos_Tipo> Documentos_Tipos
		{
			get
			{
				return this.GetTable<Documentos_Tipo>();
			}
		}
		
		public System.Data.Linq.Table<Egreso_Motivo> Egreso_Motivos
		{
			get
			{
				return this.GetTable<Egreso_Motivo>();
			}
		}
		
		public System.Data.Linq.Table<Egreso_Stock> Egreso_Stocks
		{
			get
			{
				return this.GetTable<Egreso_Stock>();
			}
		}
		
		public System.Data.Linq.Table<Empresa> Empresas
		{
			get
			{
				return this.GetTable<Empresa>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Facturas
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<Facturas_Linea> Facturas_Lineas
		{
			get
			{
				return this.GetTable<Facturas_Linea>();
			}
		}
		
		public System.Data.Linq.Table<Localidade> Localidades
		{
			get
			{
				return this.GetTable<Localidade>();
			}
		}
		
		public System.Data.Linq.Table<Presupuesto> Presupuestos
		{
			get
			{
				return this.GetTable<Presupuesto>();
			}
		}
		
		public System.Data.Linq.Table<Presupuestos_Linea> Presupuestos_Lineas
		{
			get
			{
				return this.GetTable<Presupuestos_Linea>();
			}
		}
		
		public System.Data.Linq.Table<Provincia> Provincias
		{
			get
			{
				return this.GetTable<Provincia>();
			}
		}
		
		public System.Data.Linq.Table<Remito> Remitos
		{
			get
			{
				return this.GetTable<Remito>();
			}
		}
	}
	
	[Table(Name="dbo.Articulos")]
	public partial class Articulo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idArticulo;
		
		private string _Codigo;
		
		private string _idColor;
		
		private string _Descripcion;
		
		private decimal _Precio;
		
		private System.Nullable<bool> _BajaLogica;
		
		private decimal _Stock;
		
		private EntitySet<Remitos_Linea> _Remitos_Lineas;
		
		private EntitySet<Egreso_Stock> _Egreso_Stocks;
		
		private EntitySet<Facturas_Linea> _Facturas_Lineas;
		
		private EntitySet<Presupuestos_Linea> _Presupuestos_Lineas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidArticuloChanging(int value);
    partial void OnidArticuloChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnCodColorChanging(string value);
    partial void OnCodColorChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnBajaLogicaChanging(System.Nullable<bool> value);
    partial void OnBajaLogicaChanged();
    partial void OnStockChanging(decimal value);
    partial void OnStockChanged();
    #endregion
		
		public Articulo()
		{
			this._Remitos_Lineas = new EntitySet<Remitos_Linea>(new Action<Remitos_Linea>(this.attach_Remitos_Lineas), new Action<Remitos_Linea>(this.detach_Remitos_Lineas));
			this._Egreso_Stocks = new EntitySet<Egreso_Stock>(new Action<Egreso_Stock>(this.attach_Egreso_Stocks), new Action<Egreso_Stock>(this.detach_Egreso_Stocks));
			this._Facturas_Lineas = new EntitySet<Facturas_Linea>(new Action<Facturas_Linea>(this.attach_Facturas_Lineas), new Action<Facturas_Linea>(this.detach_Facturas_Lineas));
			this._Presupuestos_Lineas = new EntitySet<Presupuestos_Linea>(new Action<Presupuestos_Linea>(this.attach_Presupuestos_Lineas), new Action<Presupuestos_Linea>(this.detach_Presupuestos_Lineas));
			OnCreated();
		}
		
		[Column(Storage="_idArticulo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idArticulo
		{
			get
			{
				return this._idArticulo;
			}
			set
			{
				if ((this._idArticulo != value))
				{
					this.OnidArticuloChanging(value);
					this.SendPropertyChanging();
					this._idArticulo = value;
					this.SendPropertyChanged("idArticulo");
					this.OnidArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_Codigo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[Column(Storage="_idColor", DbType="VarChar(10) ")]
		public string CodColor
		{
			get
			{
				return this._idColor;
			}
			set
			{
				if ((this._idColor != value))
				{
					this.OnCodColorChanging(value);
					this.SendPropertyChanging();
					this._idColor = value;
					this.SendPropertyChanged("CodColor");
					this.OnCodColorChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_Precio", DbType="Decimal(18,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[Column(Storage="_BajaLogica", DbType="Bit")]
		public System.Nullable<bool> BajaLogica
		{
			get
			{
				return this._BajaLogica;
			}
			set
			{
				if ((this._BajaLogica != value))
				{
					this.OnBajaLogicaChanging(value);
					this.SendPropertyChanging();
					this._BajaLogica = value;
					this.SendPropertyChanged("BajaLogica");
					this.OnBajaLogicaChanged();
				}
			}
		}
		
		[Column(Storage="_Stock", DbType="Decimal(18,2) NOT NULL")]
		public decimal Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[Association(Name="Articulo_Remitos_Linea", Storage="_Remitos_Lineas", OtherKey="idArticulo")]
		public EntitySet<Remitos_Linea> Remitos_Lineas
		{
			get
			{
				return this._Remitos_Lineas;
			}
			set
			{
				this._Remitos_Lineas.Assign(value);
			}
		}
		
		[Association(Name="Articulo_Egreso_Stock", Storage="_Egreso_Stocks", OtherKey="idArticulo")]
		public EntitySet<Egreso_Stock> Egreso_Stocks
		{
			get
			{
				return this._Egreso_Stocks;
			}
			set
			{
				this._Egreso_Stocks.Assign(value);
			}
		}
		
		[Association(Name="Articulo_Facturas_Linea", Storage="_Facturas_Lineas", OtherKey="idArticulo")]
		public EntitySet<Facturas_Linea> Facturas_Lineas
		{
			get
			{
				return this._Facturas_Lineas;
			}
			set
			{
				this._Facturas_Lineas.Assign(value);
			}
		}
		
		[Association(Name="Articulo_Presupuestos_Linea", Storage="_Presupuestos_Lineas", OtherKey="idArticulo")]
		public EntitySet<Presupuestos_Linea> Presupuestos_Lineas
		{
			get
			{
				return this._Presupuestos_Lineas;
			}
			set
			{
				this._Presupuestos_Lineas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Remitos_Lineas(Remitos_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = this;
		}
		
		private void detach_Remitos_Lineas(Remitos_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = null;
		}
		
		private void attach_Egreso_Stocks(Egreso_Stock entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = this;
		}
		
		private void detach_Egreso_Stocks(Egreso_Stock entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = null;
		}
		
		private void attach_Facturas_Lineas(Facturas_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = this;
		}
		
		private void detach_Facturas_Lineas(Facturas_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = null;
		}
		
		private void attach_Presupuestos_Lineas(Presupuestos_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = this;
		}
		
		private void detach_Presupuestos_Lineas(Presupuestos_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = null;
		}
	}
	
	[Table(Name="dbo.Remitos_Linea")]
	public partial class Remitos_Linea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRemitosLinea;
		
		private int _idRemito;
		
		private int _idArticulo;
		
		private decimal _Envases;
		
		private decimal _Cantidad;
		
		private decimal _Precio;
		
		private EntityRef<Articulo> _Articulo;
		
		private EntityRef<Remito> _Remito;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRemitosLineaChanging(int value);
    partial void OnidRemitosLineaChanged();
    partial void OnidRemitoChanging(int value);
    partial void OnidRemitoChanged();
    partial void OnidArticuloChanging(int value);
    partial void OnidArticuloChanged();
    partial void OnEnvasesChanging(decimal value);
    partial void OnEnvasesChanged();
    partial void OnCantidadChanging(decimal value);
    partial void OnCantidadChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    #endregion
		
		public Remitos_Linea()
		{
			this._Articulo = default(EntityRef<Articulo>);
			this._Remito = default(EntityRef<Remito>);
			OnCreated();
		}
		
		[Column(Storage="_idRemitosLinea", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRemitosLinea
		{
			get
			{
				return this._idRemitosLinea;
			}
			set
			{
				if ((this._idRemitosLinea != value))
				{
					this.OnidRemitosLineaChanging(value);
					this.SendPropertyChanging();
					this._idRemitosLinea = value;
					this.SendPropertyChanged("idRemitosLinea");
					this.OnidRemitosLineaChanged();
				}
			}
		}
		
		[Column(Storage="_idRemito", DbType="Int NOT NULL")]
		public int idRemito
		{
			get
			{
				return this._idRemito;
			}
			set
			{
				if ((this._idRemito != value))
				{
					if (this._Remito.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRemitoChanging(value);
					this.SendPropertyChanging();
					this._idRemito = value;
					this.SendPropertyChanged("idRemito");
					this.OnidRemitoChanged();
				}
			}
		}
		
		[Column(Storage="_idArticulo", DbType="Int NOT NULL")]
		public int idArticulo
		{
			get
			{
				return this._idArticulo;
			}
			set
			{
				if ((this._idArticulo != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidArticuloChanging(value);
					this.SendPropertyChanging();
					this._idArticulo = value;
					this.SendPropertyChanged("idArticulo");
					this.OnidArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_Envases", DbType="Decimal(18,2) NOT NULL")]
		public decimal Envases
		{
			get
			{
				return this._Envases;
			}
			set
			{
				if ((this._Envases != value))
				{
					this.OnEnvasesChanging(value);
					this.SendPropertyChanging();
					this._Envases = value;
					this.SendPropertyChanged("Envases");
					this.OnEnvasesChanged();
				}
			}
		}
		
		[Column(Storage="_Cantidad", DbType="Decimal(18,2) NOT NULL")]
		public decimal Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[Column(Storage="_Precio", DbType="Decimal(18,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[Association(Name="Articulo_Remitos_Linea", Storage="_Articulo", ThisKey="idArticulo", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.Remitos_Lineas.Remove(this);
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.Remitos_Lineas.Add(this);
						this._idArticulo = value.idArticulo;
					}
					else
					{
						this._idArticulo = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		[Association(Name="Remito_Remitos_Linea", Storage="_Remito", ThisKey="idRemito", IsForeignKey=true)]
		public Remito Remito
		{
			get
			{
				return this._Remito.Entity;
			}
			set
			{
				Remito previousValue = this._Remito.Entity;
				if (((previousValue != value) 
							|| (this._Remito.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Remito.Entity = null;
						previousValue.Remitos_Lineas.Remove(this);
					}
					this._Remito.Entity = value;
					if ((value != null))
					{
						value.Remitos_Lineas.Add(this);
						this._idRemito = value.idRemito;
					}
					else
					{
						this._idRemito = default(int);
					}
					this.SendPropertyChanged("Remito");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Articulos_Color")]
	public partial class Articulos_Color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idColor;
		
		private string _Codigo;
		
		private string _Descripcion;
		
		private string _RGB;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidColorChanging(int value);
    partial void OnidColorChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnRGBChanging(string value);
    partial void OnRGBChanged();
    #endregion
		
		public Articulos_Color()
		{
			OnCreated();
		}
		
		[Column(Storage="_idColor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idColor
		{
			get
			{
				return this._idColor;
			}
			set
			{
				if ((this._idColor != value))
				{
					this.OnidColorChanging(value);
					this.SendPropertyChanging();
					this._idColor = value;
					this.SendPropertyChanged("idColor");
					this.OnidColorChanged();
				}
			}
		}
		
		[Column(Storage="_Codigo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_RGB", DbType="VarChar(6)")]
		public string RGB
		{
			get
			{
				return this._RGB;
			}
			set
			{
				if ((this._RGB != value))
				{
					this.OnRGBChanging(value);
					this.SendPropertyChanging();
					this._RGB = value;
					this.SendPropertyChanged("RGB");
					this.OnRGBChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Clientes")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCliente;
		
		private string _Codigo;
		
		private string _RazonSocial;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _CUIT;
		
		private int _idCondicionIVA;
		
		private string _Pagos;
		
		private string _Email;
		
		private string _Web;
		
		private System.Nullable<bool> _BajaLogica;
		
		private EntitySet<Clientes_Contacto> _Clientes_Contactos;
		
		private EntitySet<Clientes_Domicilio> _Clientes_Domicilios;
		
		private EntitySet<Clientes_Telefono> _Clientes_Telefonos;
		
		private EntitySet<Clientes_Transportista> _Clientes_Transportistas;
		
		private EntityRef<CondicionIVA> _CondicionIVA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnRazonSocialChanging(string value);
    partial void OnRazonSocialChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnCUITChanging(string value);
    partial void OnCUITChanged();
    partial void OnidCondicionIVAChanging(int value);
    partial void OnidCondicionIVAChanged();
    partial void OnPagosChanging(string value);
    partial void OnPagosChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebChanging(string value);
    partial void OnWebChanged();
    partial void OnBajaLogicaChanging(System.Nullable<bool> value);
    partial void OnBajaLogicaChanged();
    #endregion
		
		public Cliente()
		{
			this._Clientes_Contactos = new EntitySet<Clientes_Contacto>(new Action<Clientes_Contacto>(this.attach_Clientes_Contactos), new Action<Clientes_Contacto>(this.detach_Clientes_Contactos));
			this._Clientes_Domicilios = new EntitySet<Clientes_Domicilio>(new Action<Clientes_Domicilio>(this.attach_Clientes_Domicilios), new Action<Clientes_Domicilio>(this.detach_Clientes_Domicilios));
			this._Clientes_Telefonos = new EntitySet<Clientes_Telefono>(new Action<Clientes_Telefono>(this.attach_Clientes_Telefonos), new Action<Clientes_Telefono>(this.detach_Clientes_Telefonos));
			this._Clientes_Transportistas = new EntitySet<Clientes_Transportista>(new Action<Clientes_Transportista>(this.attach_Clientes_Transportistas), new Action<Clientes_Transportista>(this.detach_Clientes_Transportistas));
			this._CondicionIVA = default(EntityRef<CondicionIVA>);
			OnCreated();
		}
		
		[Column(Storage="_idCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_Codigo", DbType="VarChar(10)")]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[Column(Storage="_RazonSocial", DbType="VarChar(250)")]
		public string RazonSocial
		{
			get
			{
				return this._RazonSocial;
			}
			set
			{
				if ((this._RazonSocial != value))
				{
					this.OnRazonSocialChanging(value);
					this.SendPropertyChanging();
					this._RazonSocial = value;
					this.SendPropertyChanged("RazonSocial");
					this.OnRazonSocialChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_Apellido", DbType="VarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[Column(Storage="_CUIT", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CUIT
		{
			get
			{
				return this._CUIT;
			}
			set
			{
				if ((this._CUIT != value))
				{
					this.OnCUITChanging(value);
					this.SendPropertyChanging();
					this._CUIT = value;
					this.SendPropertyChanged("CUIT");
					this.OnCUITChanged();
				}
			}
		}
		
		[Column(Storage="_idCondicionIVA", DbType="Int NOT NULL")]
		public int idCondicionIVA
		{
			get
			{
				return this._idCondicionIVA;
			}
			set
			{
				if ((this._idCondicionIVA != value))
				{
					if (this._CondicionIVA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCondicionIVAChanging(value);
					this.SendPropertyChanging();
					this._idCondicionIVA = value;
					this.SendPropertyChanged("idCondicionIVA");
					this.OnidCondicionIVAChanged();
				}
			}
		}
		
		[Column(Storage="_Pagos", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Pagos
		{
			get
			{
				return this._Pagos;
			}
			set
			{
				if ((this._Pagos != value))
				{
					this.OnPagosChanging(value);
					this.SendPropertyChanging();
					this._Pagos = value;
					this.SendPropertyChanged("Pagos");
					this.OnPagosChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Web", DbType="VarChar(50)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this.OnWebChanging(value);
					this.SendPropertyChanging();
					this._Web = value;
					this.SendPropertyChanged("Web");
					this.OnWebChanged();
				}
			}
		}
		
		[Column(Storage="_BajaLogica", DbType="Bit")]
		public System.Nullable<bool> BajaLogica
		{
			get
			{
				return this._BajaLogica;
			}
			set
			{
				if ((this._BajaLogica != value))
				{
					this.OnBajaLogicaChanging(value);
					this.SendPropertyChanging();
					this._BajaLogica = value;
					this.SendPropertyChanged("BajaLogica");
					this.OnBajaLogicaChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Clientes_Contacto", Storage="_Clientes_Contactos", OtherKey="idCliente")]
		public EntitySet<Clientes_Contacto> Clientes_Contactos
		{
			get
			{
				return this._Clientes_Contactos;
			}
			set
			{
				this._Clientes_Contactos.Assign(value);
			}
		}
		
		[Association(Name="Cliente_Clientes_Domicilio", Storage="_Clientes_Domicilios", OtherKey="idCliente")]
		public EntitySet<Clientes_Domicilio> Clientes_Domicilios
		{
			get
			{
				return this._Clientes_Domicilios;
			}
			set
			{
				this._Clientes_Domicilios.Assign(value);
			}
		}
		
		[Association(Name="Cliente_Clientes_Telefono", Storage="_Clientes_Telefonos", OtherKey="idCliente")]
		public EntitySet<Clientes_Telefono> Clientes_Telefonos
		{
			get
			{
				return this._Clientes_Telefonos;
			}
			set
			{
				this._Clientes_Telefonos.Assign(value);
			}
		}
		
		[Association(Name="Cliente_Clientes_Transportista", Storage="_Clientes_Transportistas", OtherKey="idCliente")]
		public EntitySet<Clientes_Transportista> Clientes_Transportistas
		{
			get
			{
				return this._Clientes_Transportistas;
			}
			set
			{
				this._Clientes_Transportistas.Assign(value);
			}
		}
		
		[Association(Name="CondicionIVA_Cliente", Storage="_CondicionIVA", ThisKey="idCondicionIVA", IsForeignKey=true)]
		public CondicionIVA CondicionIVA
		{
			get
			{
				return this._CondicionIVA.Entity;
			}
			set
			{
				CondicionIVA previousValue = this._CondicionIVA.Entity;
				if (((previousValue != value) 
							|| (this._CondicionIVA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CondicionIVA.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._CondicionIVA.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._idCondicionIVA = value.idCondicionIVA;
					}
					else
					{
						this._idCondicionIVA = default(int);
					}
					this.SendPropertyChanged("CondicionIVA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes_Contactos(Clientes_Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Clientes_Contactos(Clientes_Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Clientes_Domicilios(Clientes_Domicilio entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Clientes_Domicilios(Clientes_Domicilio entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Clientes_Telefonos(Clientes_Telefono entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Clientes_Telefonos(Clientes_Telefono entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Clientes_Transportistas(Clientes_Transportista entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Clientes_Transportistas(Clientes_Transportista entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[Table(Name="dbo.Clientes_Contactos")]
	public partial class Clientes_Contacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idContacto;
		
		private int _idCliente;
		
		private string _Nombre;
		
		private string _Email;
		
		private System.Nullable<bool> _BajaLogica;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidContactoChanging(int value);
    partial void OnidContactoChanged();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBajaLogicaChanging(System.Nullable<bool> value);
    partial void OnBajaLogicaChanged();
    #endregion
		
		public Clientes_Contacto()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[Column(Storage="_idContacto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idContacto
		{
			get
			{
				return this._idContacto;
			}
			set
			{
				if ((this._idContacto != value))
				{
					this.OnidContactoChanging(value);
					this.SendPropertyChanging();
					this._idContacto = value;
					this.SendPropertyChanged("idContacto");
					this.OnidContactoChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int NOT NULL")]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_BajaLogica", DbType="Bit")]
		public System.Nullable<bool> BajaLogica
		{
			get
			{
				return this._BajaLogica;
			}
			set
			{
				if ((this._BajaLogica != value))
				{
					this.OnBajaLogicaChanging(value);
					this.SendPropertyChanging();
					this._BajaLogica = value;
					this.SendPropertyChanged("BajaLogica");
					this.OnBajaLogicaChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Clientes_Contacto", Storage="_Cliente", ThisKey="idCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Clientes_Contactos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Clientes_Contactos.Add(this);
						this._idCliente = value.idCliente;
					}
					else
					{
						this._idCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Clientes_Domicilios")]
	public partial class Clientes_Domicilio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDomicilio;
		
		private int _idCliente;
		
		private string _Domicilio;
		
		private string _Localidad;
		
		private string _Provincia;
		
		private string _CodPostal;
		
		private string _Descripcion;
		
		private System.Nullable<bool> _BajaLogica;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDomicilioChanging(int value);
    partial void OnidDomicilioChanged();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnDomicilioChanging(string value);
    partial void OnDomicilioChanged();
    partial void OnLocalidadChanging(string value);
    partial void OnLocalidadChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCodPostalChanging(string value);
    partial void OnCodPostalChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnBajaLogicaChanging(System.Nullable<bool> value);
    partial void OnBajaLogicaChanged();
    #endregion
		
		public Clientes_Domicilio()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[Column(Storage="_idDomicilio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDomicilio
		{
			get
			{
				return this._idDomicilio;
			}
			set
			{
				if ((this._idDomicilio != value))
				{
					this.OnidDomicilioChanging(value);
					this.SendPropertyChanging();
					this._idDomicilio = value;
					this.SendPropertyChanged("idDomicilio");
					this.OnidDomicilioChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int NOT NULL")]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_Domicilio", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Domicilio
		{
			get
			{
				return this._Domicilio;
			}
			set
			{
				if ((this._Domicilio != value))
				{
					this.OnDomicilioChanging(value);
					this.SendPropertyChanging();
					this._Domicilio = value;
					this.SendPropertyChanged("Domicilio");
					this.OnDomicilioChanged();
				}
			}
		}
		
		[Column(Storage="_Localidad", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Localidad
		{
			get
			{
				return this._Localidad;
			}
			set
			{
				if ((this._Localidad != value))
				{
					this.OnLocalidadChanging(value);
					this.SendPropertyChanging();
					this._Localidad = value;
					this.SendPropertyChanged("Localidad");
					this.OnLocalidadChanged();
				}
			}
		}
		
		[Column(Storage="_Provincia", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[Column(Storage="_CodPostal", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CodPostal
		{
			get
			{
				return this._CodPostal;
			}
			set
			{
				if ((this._CodPostal != value))
				{
					this.OnCodPostalChanging(value);
					this.SendPropertyChanging();
					this._CodPostal = value;
					this.SendPropertyChanged("CodPostal");
					this.OnCodPostalChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(250)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_BajaLogica", DbType="Bit")]
		public System.Nullable<bool> BajaLogica
		{
			get
			{
				return this._BajaLogica;
			}
			set
			{
				if ((this._BajaLogica != value))
				{
					this.OnBajaLogicaChanging(value);
					this.SendPropertyChanging();
					this._BajaLogica = value;
					this.SendPropertyChanged("BajaLogica");
					this.OnBajaLogicaChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Clientes_Domicilio", Storage="_Cliente", ThisKey="idCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Clientes_Domicilios.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Clientes_Domicilios.Add(this);
						this._idCliente = value.idCliente;
					}
					else
					{
						this._idCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Clientes_Telefonos")]
	public partial class Clientes_Telefono : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTelefono;
		
		private int _idCliente;
		
		private string _Fax;
		
		private string _Telefono;
		
		private string _Descripcion;
		
		private System.Nullable<bool> _BajaLogica;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTelefonoChanging(int value);
    partial void OnidTelefonoChanged();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnBajaLogicaChanging(System.Nullable<bool> value);
    partial void OnBajaLogicaChanged();
    #endregion
		
		public Clientes_Telefono()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[Column(Storage="_idTelefono", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTelefono
		{
			get
			{
				return this._idTelefono;
			}
			set
			{
				if ((this._idTelefono != value))
				{
					this.OnidTelefonoChanging(value);
					this.SendPropertyChanging();
					this._idTelefono = value;
					this.SendPropertyChanged("idTelefono");
					this.OnidTelefonoChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int NOT NULL")]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NChar(10)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_BajaLogica", DbType="Bit")]
		public System.Nullable<bool> BajaLogica
		{
			get
			{
				return this._BajaLogica;
			}
			set
			{
				if ((this._BajaLogica != value))
				{
					this.OnBajaLogicaChanging(value);
					this.SendPropertyChanging();
					this._BajaLogica = value;
					this.SendPropertyChanged("BajaLogica");
					this.OnBajaLogicaChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Clientes_Telefono", Storage="_Cliente", ThisKey="idCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Clientes_Telefonos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Clientes_Telefonos.Add(this);
						this._idCliente = value.idCliente;
					}
					else
					{
						this._idCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Clientes_Transportistas")]
	public partial class Clientes_Transportista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTransportista;
		
		private System.Nullable<int> _idCliente;
		
		private string _Nombre;
		
		private string _CUIT;
		
		private string _Domicilio;
		
		private string _Localidad;
		
		private string _Provincia;
		
		private string _CodPostal;
		
		private string _Telefono;
		
		private string _InformacionAdicional;
		
		private System.Nullable<bool> _BajaLogica;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTransportistaChanging(int value);
    partial void OnidTransportistaChanged();
    partial void OnidClienteChanging(System.Nullable<int> value);
    partial void OnidClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCUITChanging(string value);
    partial void OnCUITChanged();
    partial void OnDomicilioChanging(string value);
    partial void OnDomicilioChanged();
    partial void OnLocalidadChanging(string value);
    partial void OnLocalidadChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCodPostalChanging(string value);
    partial void OnCodPostalChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnInformacionAdicionalChanging(string value);
    partial void OnInformacionAdicionalChanged();
    partial void OnBajaLogicaChanging(System.Nullable<bool> value);
    partial void OnBajaLogicaChanged();
    #endregion
		
		public Clientes_Transportista()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[Column(Storage="_idTransportista", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTransportista
		{
			get
			{
				return this._idTransportista;
			}
			set
			{
				if ((this._idTransportista != value))
				{
					this.OnidTransportistaChanging(value);
					this.SendPropertyChanging();
					this._idTransportista = value;
					this.SendPropertyChanged("idTransportista");
					this.OnidTransportistaChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int")]
		public System.Nullable<int> idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_CUIT", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CUIT
		{
			get
			{
				return this._CUIT;
			}
			set
			{
				if ((this._CUIT != value))
				{
					this.OnCUITChanging(value);
					this.SendPropertyChanging();
					this._CUIT = value;
					this.SendPropertyChanged("CUIT");
					this.OnCUITChanged();
				}
			}
		}
		
		[Column(Storage="_Domicilio", DbType="VarChar(250)")]
		public string Domicilio
		{
			get
			{
				return this._Domicilio;
			}
			set
			{
				if ((this._Domicilio != value))
				{
					this.OnDomicilioChanging(value);
					this.SendPropertyChanging();
					this._Domicilio = value;
					this.SendPropertyChanged("Domicilio");
					this.OnDomicilioChanged();
				}
			}
		}
		
		[Column(Storage="_Localidad", DbType="VarChar(100)")]
		public string Localidad
		{
			get
			{
				return this._Localidad;
			}
			set
			{
				if ((this._Localidad != value))
				{
					this.OnLocalidadChanging(value);
					this.SendPropertyChanging();
					this._Localidad = value;
					this.SendPropertyChanged("Localidad");
					this.OnLocalidadChanged();
				}
			}
		}
		
		[Column(Storage="_Provincia", DbType="VarChar(100)")]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[Column(Storage="_CodPostal", DbType="VarChar(10)")]
		public string CodPostal
		{
			get
			{
				return this._CodPostal;
			}
			set
			{
				if ((this._CodPostal != value))
				{
					this.OnCodPostalChanging(value);
					this.SendPropertyChanging();
					this._CodPostal = value;
					this.SendPropertyChanged("CodPostal");
					this.OnCodPostalChanged();
				}
			}
		}
		
		[Column(Storage="_Telefono", DbType="VarChar(20)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[Column(Storage="_InformacionAdicional", DbType="VarChar(250)")]
		public string InformacionAdicional
		{
			get
			{
				return this._InformacionAdicional;
			}
			set
			{
				if ((this._InformacionAdicional != value))
				{
					this.OnInformacionAdicionalChanging(value);
					this.SendPropertyChanging();
					this._InformacionAdicional = value;
					this.SendPropertyChanged("InformacionAdicional");
					this.OnInformacionAdicionalChanged();
				}
			}
		}
		
		[Column(Storage="_BajaLogica", DbType="Bit")]
		public System.Nullable<bool> BajaLogica
		{
			get
			{
				return this._BajaLogica;
			}
			set
			{
				if ((this._BajaLogica != value))
				{
					this.OnBajaLogicaChanging(value);
					this.SendPropertyChanging();
					this._BajaLogica = value;
					this.SendPropertyChanged("BajaLogica");
					this.OnBajaLogicaChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Clientes_Transportista", Storage="_Cliente", ThisKey="idCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Clientes_Transportistas.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Clientes_Transportistas.Add(this);
						this._idCliente = value.idCliente;
					}
					else
					{
						this._idCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CondicionIVA")]
	public partial class CondicionIVA : INotifyPropertyChanging, INotifyPropertyChanged
	{
        public override string ToString()
        {
            return Descripcion.ToString();
        }
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCondicionIVA;
		
		private string _Descripcion;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<Empresa> _Empresas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCondicionIVAChanging(int value);
    partial void OnidCondicionIVAChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public CondicionIVA()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Empresas = new EntitySet<Empresa>(new Action<Empresa>(this.attach_Empresas), new Action<Empresa>(this.detach_Empresas));
			OnCreated();
		}
		
		[Column(Storage="_idCondicionIVA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCondicionIVA
		{
			get
			{
				return this._idCondicionIVA;
			}
			set
			{
				if ((this._idCondicionIVA != value))
				{
					this.OnidCondicionIVAChanging(value);
					this.SendPropertyChanging();
					this._idCondicionIVA = value;
					this.SendPropertyChanged("idCondicionIVA");
					this.OnidCondicionIVAChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="CondicionIVA_Cliente", Storage="_Clientes", OtherKey="idCondicionIVA")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[Association(Name="CondicionIVA_Empresa", Storage="_Empresas", OtherKey="idCondicionIVA")]
		public EntitySet<Empresa> Empresas
		{
			get
			{
				return this._Empresas;
			}
			set
			{
				this._Empresas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.CondicionIVA = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.CondicionIVA = null;
		}
		
		private void attach_Empresas(Empresa entity)
		{
			this.SendPropertyChanging();
			entity.CondicionIVA = this;
		}
		
		private void detach_Empresas(Empresa entity)
		{
			this.SendPropertyChanging();
			entity.CondicionIVA = null;
		}
	}
	
	[Table(Name="dbo.Documentos_Estados")]
	public partial class Documentos_Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEstado;
		
		private string _Descripcion;
		
		private EntitySet<Factura> _Facturas;
		
		private EntitySet<Presupuesto> _Presupuestos;
		
		private EntitySet<Remito> _Remitos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Documentos_Estado()
		{
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			this._Presupuestos = new EntitySet<Presupuesto>(new Action<Presupuesto>(this.attach_Presupuestos), new Action<Presupuesto>(this.detach_Presupuestos));
			this._Remitos = new EntitySet<Remito>(new Action<Remito>(this.attach_Remitos), new Action<Remito>(this.detach_Remitos));
			OnCreated();
		}
		
		[Column(Storage="_idEstado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Documentos_Estado_Factura", Storage="_Facturas", OtherKey="idEstado")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[Association(Name="Documentos_Estado_Presupuesto", Storage="_Presupuestos", OtherKey="idEstado")]
		public EntitySet<Presupuesto> Presupuestos
		{
			get
			{
				return this._Presupuestos;
			}
			set
			{
				this._Presupuestos.Assign(value);
			}
		}
		
		[Association(Name="Documentos_Estado_Remito", Storage="_Remitos", OtherKey="idEstado")]
		public EntitySet<Remito> Remitos
		{
			get
			{
				return this._Remitos;
			}
			set
			{
				this._Remitos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Documentos_Estado = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Documentos_Estado = null;
		}
		
		private void attach_Presupuestos(Presupuesto entity)
		{
			this.SendPropertyChanging();
			entity.Documentos_Estado = this;
		}
		
		private void detach_Presupuestos(Presupuesto entity)
		{
			this.SendPropertyChanging();
			entity.Documentos_Estado = null;
		}
		
		private void attach_Remitos(Remito entity)
		{
			this.SendPropertyChanging();
			entity.Documentos_Estado = this;
		}
		
		private void detach_Remitos(Remito entity)
		{
			this.SendPropertyChanging();
			entity.Documentos_Estado = null;
		}
	}
	
	[Table(Name="dbo.Documentos_Tipo")]
	public partial class Documentos_Tipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTipoDocumento;
		
		private string _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Factura> _Facturas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoDocumentoChanging(int value);
    partial void OnidTipoDocumentoChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Documentos_Tipo()
		{
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			OnCreated();
		}
		
		[Column(Storage="_idTipoDocumento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTipoDocumento
		{
			get
			{
				return this._idTipoDocumento;
			}
			set
			{
				if ((this._idTipoDocumento != value))
				{
					this.OnidTipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._idTipoDocumento = value;
					this.SendPropertyChanged("idTipoDocumento");
					this.OnidTipoDocumentoChanged();
				}
			}
		}
		
		[Column(Storage="_Codigo", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Documentos_Tipo_Factura", Storage="_Facturas", OtherKey="idTipoDocumento")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Documentos_Tipo = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Documentos_Tipo = null;
		}
	}
	
	[Table(Name="dbo.Egreso_Motivos")]
	public partial class Egreso_Motivo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMotivo;
		
		private string _Descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMotivoChanging(int value);
    partial void OnidMotivoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Egreso_Motivo()
		{
			OnCreated();
		}
		
		[Column(Storage="_idMotivo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMotivo
		{
			get
			{
				return this._idMotivo;
			}
			set
			{
				if ((this._idMotivo != value))
				{
					this.OnidMotivoChanging(value);
					this.SendPropertyChanging();
					this._idMotivo = value;
					this.SendPropertyChanged("idMotivo");
					this.OnidMotivoChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Egreso_Stock")]
	public partial class Egreso_Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEgreso;
		
		private int _idArticulo;
		
		private System.DateTime _FechaEgreso;
		
		private string _Motivo;
		
		private decimal _Cantidad;
		
		private EntityRef<Articulo> _Articulo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEgresoChanging(int value);
    partial void OnidEgresoChanged();
    partial void OnidArticuloChanging(int value);
    partial void OnidArticuloChanged();
    partial void OnFechaEgresoChanging(System.DateTime value);
    partial void OnFechaEgresoChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    partial void OnCantidadChanging(decimal value);
    partial void OnCantidadChanged();
    #endregion
		
		public Egreso_Stock()
		{
			this._Articulo = default(EntityRef<Articulo>);
			OnCreated();
		}
		
		[Column(Storage="_idEgreso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEgreso
		{
			get
			{
				return this._idEgreso;
			}
			set
			{
				if ((this._idEgreso != value))
				{
					this.OnidEgresoChanging(value);
					this.SendPropertyChanging();
					this._idEgreso = value;
					this.SendPropertyChanged("idEgreso");
					this.OnidEgresoChanged();
				}
			}
		}
		
		[Column(Storage="_idArticulo", DbType="Int NOT NULL")]
		public int idArticulo
		{
			get
			{
				return this._idArticulo;
			}
			set
			{
				if ((this._idArticulo != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidArticuloChanging(value);
					this.SendPropertyChanging();
					this._idArticulo = value;
					this.SendPropertyChanged("idArticulo");
					this.OnidArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_FechaEgreso", DbType="DateTime NOT NULL")]
		public System.DateTime FechaEgreso
		{
			get
			{
				return this._FechaEgreso;
			}
			set
			{
				if ((this._FechaEgreso != value))
				{
					this.OnFechaEgresoChanging(value);
					this.SendPropertyChanging();
					this._FechaEgreso = value;
					this.SendPropertyChanged("FechaEgreso");
					this.OnFechaEgresoChanged();
				}
			}
		}
		
		[Column(Storage="_Motivo", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[Column(Storage="_Cantidad", DbType="Decimal(18,2) NOT NULL")]
		public decimal Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[Association(Name="Articulo_Egreso_Stock", Storage="_Articulo", ThisKey="idArticulo", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.Egreso_Stocks.Remove(this);
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.Egreso_Stocks.Add(this);
						this._idArticulo = value.idArticulo;
					}
					else
					{
						this._idArticulo = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Empresa")]
	public partial class Empresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEmpresa;
		
		private string _RazonSocial;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _CUIT;
		
		private int _idCondicionIVA;
		
		private string _Domicilio;
		
		private string _Localidad;
		
		private string _Provincia;
		
		private string _CodPostal;
		
		private string _Telefono;
		
		private string _Fax;
		
		private System.DateTime _InicioActividades;
		
		private string _IngBrutos;
		
		private string _Email;
		
		private string _Web;
		
		private System.Nullable<decimal> _PorcentajeIVA;
		
		private string _Contrasenia;
		
		private EntityRef<CondicionIVA> _CondicionIVA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmpresaChanging(int value);
    partial void OnidEmpresaChanged();
    partial void OnRazonSocialChanging(string value);
    partial void OnRazonSocialChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnCUITChanging(string value);
    partial void OnCUITChanged();
    partial void OnidCondicionIVAChanging(int value);
    partial void OnidCondicionIVAChanged();
    partial void OnDomicilioChanging(string value);
    partial void OnDomicilioChanged();
    partial void OnLocalidadChanging(string value);
    partial void OnLocalidadChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCodPostalChanging(string value);
    partial void OnCodPostalChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnInicioActividadesChanging(System.DateTime value);
    partial void OnInicioActividadesChanged();
    partial void OnIngBrutosChanging(string value);
    partial void OnIngBrutosChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebChanging(string value);
    partial void OnWebChanged();
    partial void OnPorcentajeIVAChanging(System.Nullable<decimal> value);
    partial void OnPorcentajeIVAChanged();
    partial void OnContraseniaChanging(string value);
    partial void OnContraseniaChanged();
    #endregion
		
		public Empresa()
		{
			this._CondicionIVA = default(EntityRef<CondicionIVA>);
			OnCreated();
		}
		
		[Column(Storage="_idEmpresa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEmpresa
		{
			get
			{
				return this._idEmpresa;
			}
			set
			{
				if ((this._idEmpresa != value))
				{
					this.OnidEmpresaChanging(value);
					this.SendPropertyChanging();
					this._idEmpresa = value;
					this.SendPropertyChanged("idEmpresa");
					this.OnidEmpresaChanged();
				}
			}
		}
		
		[Column(Storage="_RazonSocial", DbType="VarChar(250)")]
		public string RazonSocial
		{
			get
			{
				return this._RazonSocial;
			}
			set
			{
				if ((this._RazonSocial != value))
				{
					this.OnRazonSocialChanging(value);
					this.SendPropertyChanging();
					this._RazonSocial = value;
					this.SendPropertyChanged("RazonSocial");
					this.OnRazonSocialChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_Apellido", DbType="VarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[Column(Storage="_CUIT", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CUIT
		{
			get
			{
				return this._CUIT;
			}
			set
			{
				if ((this._CUIT != value))
				{
					this.OnCUITChanging(value);
					this.SendPropertyChanging();
					this._CUIT = value;
					this.SendPropertyChanged("CUIT");
					this.OnCUITChanged();
				}
			}
		}
		
		[Column(Storage="_idCondicionIVA", DbType="Int NOT NULL")]
		public int idCondicionIVA
		{
			get
			{
				return this._idCondicionIVA;
			}
			set
			{
				if ((this._idCondicionIVA != value))
				{
					if (this._CondicionIVA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCondicionIVAChanging(value);
					this.SendPropertyChanging();
					this._idCondicionIVA = value;
					this.SendPropertyChanged("idCondicionIVA");
					this.OnidCondicionIVAChanged();
				}
			}
		}
		
		[Column(Storage="_Domicilio", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Domicilio
		{
			get
			{
				return this._Domicilio;
			}
			set
			{
				if ((this._Domicilio != value))
				{
					this.OnDomicilioChanging(value);
					this.SendPropertyChanging();
					this._Domicilio = value;
					this.SendPropertyChanged("Domicilio");
					this.OnDomicilioChanged();
				}
			}
		}
		
		[Column(Storage="_Localidad", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Localidad
		{
			get
			{
				return this._Localidad;
			}
			set
			{
				if ((this._Localidad != value))
				{
					this.OnLocalidadChanging(value);
					this.SendPropertyChanging();
					this._Localidad = value;
					this.SendPropertyChanged("Localidad");
					this.OnLocalidadChanged();
				}
			}
		}
		
		[Column(Storage="_Provincia", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[Column(Storage="_CodPostal", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CodPostal
		{
			get
			{
				return this._CodPostal;
			}
			set
			{
				if ((this._CodPostal != value))
				{
					this.OnCodPostalChanging(value);
					this.SendPropertyChanging();
					this._CodPostal = value;
					this.SendPropertyChanged("CodPostal");
					this.OnCodPostalChanged();
				}
			}
		}
		
		[Column(Storage="_Telefono", DbType="VarChar(20)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_InicioActividades", DbType="DateTime NOT NULL")]
		public System.DateTime InicioActividades
		{
			get
			{
				return this._InicioActividades;
			}
			set
			{
				if ((this._InicioActividades != value))
				{
					this.OnInicioActividadesChanging(value);
					this.SendPropertyChanging();
					this._InicioActividades = value;
					this.SendPropertyChanged("InicioActividades");
					this.OnInicioActividadesChanged();
				}
			}
		}
		
		[Column(Storage="_IngBrutos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IngBrutos
		{
			get
			{
				return this._IngBrutos;
			}
			set
			{
				if ((this._IngBrutos != value))
				{
					this.OnIngBrutosChanging(value);
					this.SendPropertyChanging();
					this._IngBrutos = value;
					this.SendPropertyChanged("IngBrutos");
					this.OnIngBrutosChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Web", DbType="VarChar(50)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this.OnWebChanging(value);
					this.SendPropertyChanging();
					this._Web = value;
					this.SendPropertyChanged("Web");
					this.OnWebChanged();
				}
			}
		}
		
		[Column(Storage="_PorcentajeIVA", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PorcentajeIVA
		{
			get
			{
				return this._PorcentajeIVA;
			}
			set
			{
				if ((this._PorcentajeIVA != value))
				{
					this.OnPorcentajeIVAChanging(value);
					this.SendPropertyChanging();
					this._PorcentajeIVA = value;
					this.SendPropertyChanged("PorcentajeIVA");
					this.OnPorcentajeIVAChanged();
				}
			}
		}
		
		[Column(Storage="_Contrasenia", DbType="VarChar(20)")]
		public string Contrasenia
		{
			get
			{
				return this._Contrasenia;
			}
			set
			{
				if ((this._Contrasenia != value))
				{
					this.OnContraseniaChanging(value);
					this.SendPropertyChanging();
					this._Contrasenia = value;
					this.SendPropertyChanged("Contrasenia");
					this.OnContraseniaChanged();
				}
			}
		}
		
		[Association(Name="CondicionIVA_Empresa", Storage="_CondicionIVA", ThisKey="idCondicionIVA", IsForeignKey=true)]
		public CondicionIVA CondicionIVA
		{
			get
			{
				return this._CondicionIVA.Entity;
			}
			set
			{
				CondicionIVA previousValue = this._CondicionIVA.Entity;
				if (((previousValue != value) 
							|| (this._CondicionIVA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CondicionIVA.Entity = null;
						previousValue.Empresas.Remove(this);
					}
					this._CondicionIVA.Entity = value;
					if ((value != null))
					{
						value.Empresas.Add(this);
						this._idCondicionIVA = value.idCondicionIVA;
					}
					else
					{
						this._idCondicionIVA = default(int);
					}
					this.SendPropertyChanged("CondicionIVA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Facturas")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFactura;
		
		private int _idCliente;
		
		private System.DateTime _FechaEmision;
		
		private int _idTipoDocumento;
		
		private string _Numero;
		
		private string _Remito;
		
		private string _OrdenCompra;
		
		private System.Nullable<System.DateTime> _FechaVto;
		
		private string _Observaciones;
		
		private string _Condiciones;
		
		private string _SonPesos;
		
		private decimal _Total;
		
		private System.Nullable<decimal> _Descuento;
		
		private System.Nullable<decimal> _Subtotal;
		
		private System.Nullable<decimal> _TotalIVA;
		
		private decimal _TotalNeto;
		
		private int _idEstado;
		
		private System.Nullable<bool> _BajaLogica;
		
		private int _idDomicilioCliente;
		
		private EntitySet<Facturas_Linea> _Facturas_Lineas;
		
		private EntityRef<Documentos_Estado> _Documentos_Estado;
		
		private EntityRef<Documentos_Tipo> _Documentos_Tipo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFacturaChanging(int value);
    partial void OnidFacturaChanged();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnFechaEmisionChanging(System.DateTime value);
    partial void OnFechaEmisionChanged();
    partial void OnidTipoDocumentoChanging(int value);
    partial void OnidTipoDocumentoChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnRemitoChanging(string value);
    partial void OnRemitoChanged();
    partial void OnOrdenCompraChanging(string value);
    partial void OnOrdenCompraChanged();
    partial void OnFechaVtoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaVtoChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    partial void OnCondicionesChanging(string value);
    partial void OnCondicionesChanged();
    partial void OnSonPesosChanging(string value);
    partial void OnSonPesosChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnDescuentoChanging(System.Nullable<decimal> value);
    partial void OnDescuentoChanged();
    partial void OnSubtotalChanging(System.Nullable<decimal> value);
    partial void OnSubtotalChanged();
    partial void OnTotalIVAChanging(System.Nullable<decimal> value);
    partial void OnTotalIVAChanged();
    partial void OnTotalNetoChanging(decimal value);
    partial void OnTotalNetoChanged();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnBajaLogicaChanging(System.Nullable<bool> value);
    partial void OnBajaLogicaChanged();
    partial void OnidDomicilioClienteChanging(int value);
    partial void OnidDomicilioClienteChanged();
    #endregion
		
		public Factura()
		{
			this._Facturas_Lineas = new EntitySet<Facturas_Linea>(new Action<Facturas_Linea>(this.attach_Facturas_Lineas), new Action<Facturas_Linea>(this.detach_Facturas_Lineas));
			this._Documentos_Estado = default(EntityRef<Documentos_Estado>);
			this._Documentos_Tipo = default(EntityRef<Documentos_Tipo>);
			OnCreated();
		}
		
		[Column(Storage="_idFactura", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idFactura
		{
			get
			{
				return this._idFactura;
			}
			set
			{
				if ((this._idFactura != value))
				{
					this.OnidFacturaChanging(value);
					this.SendPropertyChanging();
					this._idFactura = value;
					this.SendPropertyChanged("idFactura");
					this.OnidFacturaChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int NOT NULL")]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_FechaEmision", DbType="DateTime NOT NULL")]
		public System.DateTime FechaEmision
		{
			get
			{
				return this._FechaEmision;
			}
			set
			{
				if ((this._FechaEmision != value))
				{
					this.OnFechaEmisionChanging(value);
					this.SendPropertyChanging();
					this._FechaEmision = value;
					this.SendPropertyChanged("FechaEmision");
					this.OnFechaEmisionChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoDocumento", DbType="Int NOT NULL")]
		public int idTipoDocumento
		{
			get
			{
				return this._idTipoDocumento;
			}
			set
			{
				if ((this._idTipoDocumento != value))
				{
					if (this._Documentos_Tipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._idTipoDocumento = value;
					this.SendPropertyChanged("idTipoDocumento");
					this.OnidTipoDocumentoChanged();
				}
			}
		}
		
		[Column(Storage="_Numero", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[Column(Storage="_Remito", DbType="VarChar(50)")]
		public string Remito
		{
			get
			{
				return this._Remito;
			}
			set
			{
				if ((this._Remito != value))
				{
					this.OnRemitoChanging(value);
					this.SendPropertyChanging();
					this._Remito = value;
					this.SendPropertyChanged("Remito");
					this.OnRemitoChanged();
				}
			}
		}
		
		[Column(Storage="_OrdenCompra", DbType="VarChar(50)")]
		public string OrdenCompra
		{
			get
			{
				return this._OrdenCompra;
			}
			set
			{
				if ((this._OrdenCompra != value))
				{
					this.OnOrdenCompraChanging(value);
					this.SendPropertyChanging();
					this._OrdenCompra = value;
					this.SendPropertyChanged("OrdenCompra");
					this.OnOrdenCompraChanged();
				}
			}
		}
		
		[Column(Storage="_FechaVto", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaVto
		{
			get
			{
				return this._FechaVto;
			}
			set
			{
				if ((this._FechaVto != value))
				{
					this.OnFechaVtoChanging(value);
					this.SendPropertyChanging();
					this._FechaVto = value;
					this.SendPropertyChanged("FechaVto");
					this.OnFechaVtoChanged();
				}
			}
		}
		
		[Column(Storage="_Observaciones", DbType="VarChar(250)")]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[Column(Storage="_Condiciones", DbType="VarChar(250)")]
		public string Condiciones
		{
			get
			{
				return this._Condiciones;
			}
			set
			{
				if ((this._Condiciones != value))
				{
					this.OnCondicionesChanging(value);
					this.SendPropertyChanging();
					this._Condiciones = value;
					this.SendPropertyChanged("Condiciones");
					this.OnCondicionesChanged();
				}
			}
		}
		
		[Column(Storage="_SonPesos", DbType="VarChar(250)")]
		public string SonPesos
		{
			get
			{
				return this._SonPesos;
			}
			set
			{
				if ((this._SonPesos != value))
				{
					this.OnSonPesosChanging(value);
					this.SendPropertyChanging();
					this._SonPesos = value;
					this.SendPropertyChanged("SonPesos");
					this.OnSonPesosChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(18,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Descuento", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Descuento
		{
			get
			{
				return this._Descuento;
			}
			set
			{
				if ((this._Descuento != value))
				{
					this.OnDescuentoChanging(value);
					this.SendPropertyChanging();
					this._Descuento = value;
					this.SendPropertyChanged("Descuento");
					this.OnDescuentoChanged();
				}
			}
		}
		
		[Column(Storage="_Subtotal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[Column(Storage="_TotalIVA", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalIVA
		{
			get
			{
				return this._TotalIVA;
			}
			set
			{
				if ((this._TotalIVA != value))
				{
					this.OnTotalIVAChanging(value);
					this.SendPropertyChanging();
					this._TotalIVA = value;
					this.SendPropertyChanged("TotalIVA");
					this.OnTotalIVAChanged();
				}
			}
		}
		
		[Column(Storage="_TotalNeto", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalNeto
		{
			get
			{
				return this._TotalNeto;
			}
			set
			{
				if ((this._TotalNeto != value))
				{
					this.OnTotalNetoChanging(value);
					this.SendPropertyChanging();
					this._TotalNeto = value;
					this.SendPropertyChanged("TotalNeto");
					this.OnTotalNetoChanged();
				}
			}
		}
		
		[Column(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Documentos_Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[Column(Storage="_BajaLogica", DbType="Bit")]
		public System.Nullable<bool> BajaLogica
		{
			get
			{
				return this._BajaLogica;
			}
			set
			{
				if ((this._BajaLogica != value))
				{
					this.OnBajaLogicaChanging(value);
					this.SendPropertyChanging();
					this._BajaLogica = value;
					this.SendPropertyChanged("BajaLogica");
					this.OnBajaLogicaChanged();
				}
			}
		}
		
		[Column(Storage="_idDomicilioCliente", DbType="Int NOT NULL")]
		public int idDomicilioCliente
		{
			get
			{
				return this._idDomicilioCliente;
			}
			set
			{
				if ((this._idDomicilioCliente != value))
				{
					this.OnidDomicilioClienteChanging(value);
					this.SendPropertyChanging();
					this._idDomicilioCliente = value;
					this.SendPropertyChanged("idDomicilioCliente");
					this.OnidDomicilioClienteChanged();
				}
			}
		}
		
		[Association(Name="Factura_Facturas_Linea", Storage="_Facturas_Lineas", OtherKey="idFactura")]
		public EntitySet<Facturas_Linea> Facturas_Lineas
		{
			get
			{
				return this._Facturas_Lineas;
			}
			set
			{
				this._Facturas_Lineas.Assign(value);
			}
		}
		
		[Association(Name="Documentos_Estado_Factura", Storage="_Documentos_Estado", ThisKey="idEstado", IsForeignKey=true)]
		public Documentos_Estado Documentos_Estado
		{
			get
			{
				return this._Documentos_Estado.Entity;
			}
			set
			{
				Documentos_Estado previousValue = this._Documentos_Estado.Entity;
				if (((previousValue != value) 
							|| (this._Documentos_Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentos_Estado.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Documentos_Estado.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._idEstado = value.idEstado;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Documentos_Estado");
				}
			}
		}
		
		[Association(Name="Documentos_Tipo_Factura", Storage="_Documentos_Tipo", ThisKey="idTipoDocumento", IsForeignKey=true)]
		public Documentos_Tipo Documentos_Tipo
		{
			get
			{
				return this._Documentos_Tipo.Entity;
			}
			set
			{
				Documentos_Tipo previousValue = this._Documentos_Tipo.Entity;
				if (((previousValue != value) 
							|| (this._Documentos_Tipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentos_Tipo.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Documentos_Tipo.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._idTipoDocumento = value.idTipoDocumento;
					}
					else
					{
						this._idTipoDocumento = default(int);
					}
					this.SendPropertyChanged("Documentos_Tipo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas_Lineas(Facturas_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_Facturas_Lineas(Facturas_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
	}
	
	[Table(Name="dbo.Facturas_Linea")]
	public partial class Facturas_Linea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFacturasLinea;
		
		private int _idFactura;
		
		private int _idArticulo;
		
		private decimal _Cantidad;
		
		private decimal _Precio;
		
		private EntityRef<Articulo> _Articulo;
		
		private EntityRef<Factura> _Factura;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFacturasLineaChanging(int value);
    partial void OnidFacturasLineaChanged();
    partial void OnidFacturaChanging(int value);
    partial void OnidFacturaChanged();
    partial void OnidArticuloChanging(int value);
    partial void OnidArticuloChanged();
    partial void OnCantidadChanging(decimal value);
    partial void OnCantidadChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    #endregion
		
		public Facturas_Linea()
		{
			this._Articulo = default(EntityRef<Articulo>);
			this._Factura = default(EntityRef<Factura>);
			OnCreated();
		}
		
		[Column(Storage="_idFacturasLinea", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idFacturasLinea
		{
			get
			{
				return this._idFacturasLinea;
			}
			set
			{
				if ((this._idFacturasLinea != value))
				{
					this.OnidFacturasLineaChanging(value);
					this.SendPropertyChanging();
					this._idFacturasLinea = value;
					this.SendPropertyChanged("idFacturasLinea");
					this.OnidFacturasLineaChanged();
				}
			}
		}
		
		[Column(Storage="_idFactura", DbType="Int NOT NULL")]
		public int idFactura
		{
			get
			{
				return this._idFactura;
			}
			set
			{
				if ((this._idFactura != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFacturaChanging(value);
					this.SendPropertyChanging();
					this._idFactura = value;
					this.SendPropertyChanged("idFactura");
					this.OnidFacturaChanged();
				}
			}
		}
		
		[Column(Storage="_idArticulo", DbType="Int NOT NULL")]
		public int idArticulo
		{
			get
			{
				return this._idArticulo;
			}
			set
			{
				if ((this._idArticulo != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidArticuloChanging(value);
					this.SendPropertyChanging();
					this._idArticulo = value;
					this.SendPropertyChanged("idArticulo");
					this.OnidArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_Cantidad", DbType="Decimal(18,2) NOT NULL")]
		public decimal Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[Column(Storage="_Precio", DbType="Decimal(18,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[Association(Name="Articulo_Facturas_Linea", Storage="_Articulo", ThisKey="idArticulo", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.Facturas_Lineas.Remove(this);
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.Facturas_Lineas.Add(this);
						this._idArticulo = value.idArticulo;
					}
					else
					{
						this._idArticulo = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		[Association(Name="Factura_Facturas_Linea", Storage="_Factura", ThisKey="idFactura", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.Facturas_Lineas.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.Facturas_Lineas.Add(this);
						this._idFactura = value.idFactura;
					}
					else
					{
						this._idFactura = default(int);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Localidades")]
	public partial class Localidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLocalidad;
		
		private int _idProvincia;
		
		private string _Localidad;
		
		private string _CodPostal;
		
		private EntityRef<Provincia> _Provincia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLocalidadChanging(int value);
    partial void OnidLocalidadChanged();
    partial void OnidProvinciaChanging(int value);
    partial void OnidProvinciaChanged();
    partial void OnLocalidadChanging(string value);
    partial void OnLocalidadChanged();
    partial void OnCodPostalChanging(string value);
    partial void OnCodPostalChanged();
    #endregion
		
		public Localidade()
		{
			this._Provincia = default(EntityRef<Provincia>);
			OnCreated();
		}
		
		[Column(Storage="_idLocalidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idLocalidad
		{
			get
			{
				return this._idLocalidad;
			}
			set
			{
				if ((this._idLocalidad != value))
				{
					this.OnidLocalidadChanging(value);
					this.SendPropertyChanging();
					this._idLocalidad = value;
					this.SendPropertyChanged("idLocalidad");
					this.OnidLocalidadChanged();
				}
			}
		}
		
		[Column(Storage="_idProvincia", DbType="Int NOT NULL")]
		public int idProvincia
		{
			get
			{
				return this._idProvincia;
			}
			set
			{
				if ((this._idProvincia != value))
				{
					if (this._Provincia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProvinciaChanging(value);
					this.SendPropertyChanging();
					this._idProvincia = value;
					this.SendPropertyChanged("idProvincia");
					this.OnidProvinciaChanged();
				}
			}
		}
		
		[Column(Storage="_Localidad", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Localidad
		{
			get
			{
				return this._Localidad;
			}
			set
			{
				if ((this._Localidad != value))
				{
					this.OnLocalidadChanging(value);
					this.SendPropertyChanging();
					this._Localidad = value;
					this.SendPropertyChanged("Localidad");
					this.OnLocalidadChanged();
				}
			}
		}
		
		[Column(Storage="_CodPostal", DbType="VarChar(10)")]
		public string CodPostal
		{
			get
			{
				return this._CodPostal;
			}
			set
			{
				if ((this._CodPostal != value))
				{
					this.OnCodPostalChanging(value);
					this.SendPropertyChanging();
					this._CodPostal = value;
					this.SendPropertyChanged("CodPostal");
					this.OnCodPostalChanged();
				}
			}
		}
		
		[Association(Name="Provincia_Localidade", Storage="_Provincia", ThisKey="idProvincia", IsForeignKey=true)]
		public Provincia Provincia
		{
			get
			{
				return this._Provincia.Entity;
			}
			set
			{
				Provincia previousValue = this._Provincia.Entity;
				if (((previousValue != value) 
							|| (this._Provincia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincia.Entity = null;
						previousValue.Localidades.Remove(this);
					}
					this._Provincia.Entity = value;
					if ((value != null))
					{
						value.Localidades.Add(this);
						this._idProvincia = value.idProvincia;
					}
					else
					{
						this._idProvincia = default(int);
					}
					this.SendPropertyChanged("Provincia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Presupuestos")]
	public partial class Presupuesto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPresupuesto;
		
		private int _idCliente;
		
		private System.DateTime _FechaEmision;
		
		private string _Numero;
		
		private System.Nullable<System.DateTime> _FechaVto;
		
		private string _Condiciones;
		
		private string _Disponibilidad;
		
		private string _DomicilioEntrega;
		
		private string _LocalidadEntrega;
		
		private string _ProvinciaEntrega;
		
		private string _CodPostalEntrega;
		
		private decimal _Total;
		
		private System.Nullable<decimal> _Descuento;
		
		private System.Nullable<decimal> _Subtotal;
		
		private System.Nullable<decimal> _TotalIVA;
		
		private decimal _TotalNeto;
		
		private int _idEstado;
		
		private System.Nullable<bool> _BajaLogica;
		
		private EntitySet<Presupuestos_Linea> _Presupuestos_Lineas;
		
		private EntityRef<Documentos_Estado> _Documentos_Estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPresupuestoChanging(int value);
    partial void OnidPresupuestoChanged();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnFechaEmisionChanging(System.DateTime value);
    partial void OnFechaEmisionChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnFechaVtoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaVtoChanged();
    partial void OnCondicionesChanging(string value);
    partial void OnCondicionesChanged();
    partial void OnDisponibilidadChanging(string value);
    partial void OnDisponibilidadChanged();
    partial void OnDomicilioEntregaChanging(string value);
    partial void OnDomicilioEntregaChanged();
    partial void OnLocalidadEntregaChanging(string value);
    partial void OnLocalidadEntregaChanged();
    partial void OnProvinciaEntregaChanging(string value);
    partial void OnProvinciaEntregaChanged();
    partial void OnCodPostalEntregaChanging(string value);
    partial void OnCodPostalEntregaChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnDescuentoChanging(System.Nullable<decimal> value);
    partial void OnDescuentoChanged();
    partial void OnSubtotalChanging(System.Nullable<decimal> value);
    partial void OnSubtotalChanged();
    partial void OnTotalIVAChanging(System.Nullable<decimal> value);
    partial void OnTotalIVAChanged();
    partial void OnTotalNetoChanging(decimal value);
    partial void OnTotalNetoChanged();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnBajaLogicaChanging(System.Nullable<bool> value);
    partial void OnBajaLogicaChanged();
    #endregion
		
		public Presupuesto()
		{
			this._Presupuestos_Lineas = new EntitySet<Presupuestos_Linea>(new Action<Presupuestos_Linea>(this.attach_Presupuestos_Lineas), new Action<Presupuestos_Linea>(this.detach_Presupuestos_Lineas));
			this._Documentos_Estado = default(EntityRef<Documentos_Estado>);
			OnCreated();
		}
		
		[Column(Storage="_idPresupuesto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPresupuesto
		{
			get
			{
				return this._idPresupuesto;
			}
			set
			{
				if ((this._idPresupuesto != value))
				{
					this.OnidPresupuestoChanging(value);
					this.SendPropertyChanging();
					this._idPresupuesto = value;
					this.SendPropertyChanged("idPresupuesto");
					this.OnidPresupuestoChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int NOT NULL")]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_FechaEmision", DbType="DateTime NOT NULL")]
		public System.DateTime FechaEmision
		{
			get
			{
				return this._FechaEmision;
			}
			set
			{
				if ((this._FechaEmision != value))
				{
					this.OnFechaEmisionChanging(value);
					this.SendPropertyChanging();
					this._FechaEmision = value;
					this.SendPropertyChanged("FechaEmision");
					this.OnFechaEmisionChanged();
				}
			}
		}
		
		[Column(Storage="_Numero", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[Column(Storage="_FechaVto", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaVto
		{
			get
			{
				return this._FechaVto;
			}
			set
			{
				if ((this._FechaVto != value))
				{
					this.OnFechaVtoChanging(value);
					this.SendPropertyChanging();
					this._FechaVto = value;
					this.SendPropertyChanged("FechaVto");
					this.OnFechaVtoChanged();
				}
			}
		}
		
		[Column(Storage="_Condiciones", DbType="VarChar(250)")]
		public string Condiciones
		{
			get
			{
				return this._Condiciones;
			}
			set
			{
				if ((this._Condiciones != value))
				{
					this.OnCondicionesChanging(value);
					this.SendPropertyChanging();
					this._Condiciones = value;
					this.SendPropertyChanged("Condiciones");
					this.OnCondicionesChanged();
				}
			}
		}
		
		[Column(Storage="_Disponibilidad", DbType="VarChar(250)")]
		public string Disponibilidad
		{
			get
			{
				return this._Disponibilidad;
			}
			set
			{
				if ((this._Disponibilidad != value))
				{
					this.OnDisponibilidadChanging(value);
					this.SendPropertyChanging();
					this._Disponibilidad = value;
					this.SendPropertyChanged("Disponibilidad");
					this.OnDisponibilidadChanged();
				}
			}
		}
		
		[Column(Storage="_DomicilioEntrega", DbType="VarChar(250)")]
		public string DomicilioEntrega
		{
			get
			{
				return this._DomicilioEntrega;
			}
			set
			{
				if ((this._DomicilioEntrega != value))
				{
					this.OnDomicilioEntregaChanging(value);
					this.SendPropertyChanging();
					this._DomicilioEntrega = value;
					this.SendPropertyChanged("DomicilioEntrega");
					this.OnDomicilioEntregaChanged();
				}
			}
		}
		
		[Column(Storage="_LocalidadEntrega", DbType="VarChar(100)")]
		public string LocalidadEntrega
		{
			get
			{
				return this._LocalidadEntrega;
			}
			set
			{
				if ((this._LocalidadEntrega != value))
				{
					this.OnLocalidadEntregaChanging(value);
					this.SendPropertyChanging();
					this._LocalidadEntrega = value;
					this.SendPropertyChanged("LocalidadEntrega");
					this.OnLocalidadEntregaChanged();
				}
			}
		}
		
		[Column(Storage="_ProvinciaEntrega", DbType="VarChar(100)")]
		public string ProvinciaEntrega
		{
			get
			{
				return this._ProvinciaEntrega;
			}
			set
			{
				if ((this._ProvinciaEntrega != value))
				{
					this.OnProvinciaEntregaChanging(value);
					this.SendPropertyChanging();
					this._ProvinciaEntrega = value;
					this.SendPropertyChanged("ProvinciaEntrega");
					this.OnProvinciaEntregaChanged();
				}
			}
		}
		
		[Column(Storage="_CodPostalEntrega", DbType="VarChar(50)")]
		public string CodPostalEntrega
		{
			get
			{
				return this._CodPostalEntrega;
			}
			set
			{
				if ((this._CodPostalEntrega != value))
				{
					this.OnCodPostalEntregaChanging(value);
					this.SendPropertyChanging();
					this._CodPostalEntrega = value;
					this.SendPropertyChanged("CodPostalEntrega");
					this.OnCodPostalEntregaChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(18,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Descuento", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Descuento
		{
			get
			{
				return this._Descuento;
			}
			set
			{
				if ((this._Descuento != value))
				{
					this.OnDescuentoChanging(value);
					this.SendPropertyChanging();
					this._Descuento = value;
					this.SendPropertyChanged("Descuento");
					this.OnDescuentoChanged();
				}
			}
		}
		
		[Column(Storage="_Subtotal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[Column(Storage="_TotalIVA", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalIVA
		{
			get
			{
				return this._TotalIVA;
			}
			set
			{
				if ((this._TotalIVA != value))
				{
					this.OnTotalIVAChanging(value);
					this.SendPropertyChanging();
					this._TotalIVA = value;
					this.SendPropertyChanged("TotalIVA");
					this.OnTotalIVAChanged();
				}
			}
		}
		
		[Column(Storage="_TotalNeto", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalNeto
		{
			get
			{
				return this._TotalNeto;
			}
			set
			{
				if ((this._TotalNeto != value))
				{
					this.OnTotalNetoChanging(value);
					this.SendPropertyChanging();
					this._TotalNeto = value;
					this.SendPropertyChanged("TotalNeto");
					this.OnTotalNetoChanged();
				}
			}
		}
		
		[Column(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Documentos_Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[Column(Storage="_BajaLogica", DbType="Bit")]
		public System.Nullable<bool> BajaLogica
		{
			get
			{
				return this._BajaLogica;
			}
			set
			{
				if ((this._BajaLogica != value))
				{
					this.OnBajaLogicaChanging(value);
					this.SendPropertyChanging();
					this._BajaLogica = value;
					this.SendPropertyChanged("BajaLogica");
					this.OnBajaLogicaChanged();
				}
			}
		}
		
		[Association(Name="Presupuesto_Presupuestos_Linea", Storage="_Presupuestos_Lineas", OtherKey="idPresupuesto")]
		public EntitySet<Presupuestos_Linea> Presupuestos_Lineas
		{
			get
			{
				return this._Presupuestos_Lineas;
			}
			set
			{
				this._Presupuestos_Lineas.Assign(value);
			}
		}
		
		[Association(Name="Documentos_Estado_Presupuesto", Storage="_Documentos_Estado", ThisKey="idEstado", IsForeignKey=true)]
		public Documentos_Estado Documentos_Estado
		{
			get
			{
				return this._Documentos_Estado.Entity;
			}
			set
			{
				Documentos_Estado previousValue = this._Documentos_Estado.Entity;
				if (((previousValue != value) 
							|| (this._Documentos_Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentos_Estado.Entity = null;
						previousValue.Presupuestos.Remove(this);
					}
					this._Documentos_Estado.Entity = value;
					if ((value != null))
					{
						value.Presupuestos.Add(this);
						this._idEstado = value.idEstado;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Documentos_Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Presupuestos_Lineas(Presupuestos_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Presupuesto = this;
		}
		
		private void detach_Presupuestos_Lineas(Presupuestos_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Presupuesto = null;
		}
	}
	
	[Table(Name="dbo.Presupuestos_Linea")]
	public partial class Presupuestos_Linea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPresupuestosLinea;
		
		private int _idPresupuesto;
		
		private int _idArticulo;
		
		private int _Cantidad;
		
		private decimal _Precio;
		
		private EntityRef<Articulo> _Articulo;
		
		private EntityRef<Presupuesto> _Presupuesto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPresupuestosLineaChanging(int value);
    partial void OnidPresupuestosLineaChanged();
    partial void OnidPresupuestoChanging(int value);
    partial void OnidPresupuestoChanged();
    partial void OnidArticuloChanging(int value);
    partial void OnidArticuloChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    #endregion
		
		public Presupuestos_Linea()
		{
			this._Articulo = default(EntityRef<Articulo>);
			this._Presupuesto = default(EntityRef<Presupuesto>);
			OnCreated();
		}
		
		[Column(Storage="_idPresupuestosLinea", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPresupuestosLinea
		{
			get
			{
				return this._idPresupuestosLinea;
			}
			set
			{
				if ((this._idPresupuestosLinea != value))
				{
					this.OnidPresupuestosLineaChanging(value);
					this.SendPropertyChanging();
					this._idPresupuestosLinea = value;
					this.SendPropertyChanged("idPresupuestosLinea");
					this.OnidPresupuestosLineaChanged();
				}
			}
		}
		
		[Column(Storage="_idPresupuesto", DbType="Int NOT NULL")]
		public int idPresupuesto
		{
			get
			{
				return this._idPresupuesto;
			}
			set
			{
				if ((this._idPresupuesto != value))
				{
					if (this._Presupuesto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPresupuestoChanging(value);
					this.SendPropertyChanging();
					this._idPresupuesto = value;
					this.SendPropertyChanged("idPresupuesto");
					this.OnidPresupuestoChanged();
				}
			}
		}
		
		[Column(Storage="_idArticulo", DbType="Int NOT NULL")]
		public int idArticulo
		{
			get
			{
				return this._idArticulo;
			}
			set
			{
				if ((this._idArticulo != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidArticuloChanging(value);
					this.SendPropertyChanging();
					this._idArticulo = value;
					this.SendPropertyChanged("idArticulo");
					this.OnidArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[Column(Storage="_Precio", DbType="Decimal(18,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[Association(Name="Articulo_Presupuestos_Linea", Storage="_Articulo", ThisKey="idArticulo", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.Presupuestos_Lineas.Remove(this);
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.Presupuestos_Lineas.Add(this);
						this._idArticulo = value.idArticulo;
					}
					else
					{
						this._idArticulo = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		[Association(Name="Presupuesto_Presupuestos_Linea", Storage="_Presupuesto", ThisKey="idPresupuesto", IsForeignKey=true)]
		public Presupuesto Presupuesto
		{
			get
			{
				return this._Presupuesto.Entity;
			}
			set
			{
				Presupuesto previousValue = this._Presupuesto.Entity;
				if (((previousValue != value) 
							|| (this._Presupuesto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Presupuesto.Entity = null;
						previousValue.Presupuestos_Lineas.Remove(this);
					}
					this._Presupuesto.Entity = value;
					if ((value != null))
					{
						value.Presupuestos_Lineas.Add(this);
						this._idPresupuesto = value.idPresupuesto;
					}
					else
					{
						this._idPresupuesto = default(int);
					}
					this.SendPropertyChanged("Presupuesto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Provincias")]
	public partial class Provincia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProvincia;
		
		private string _Provincia1;
		
		private EntitySet<Localidade> _Localidades;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProvinciaChanging(int value);
    partial void OnidProvinciaChanged();
    partial void OnProvincia1Changing(string value);
    partial void OnProvincia1Changed();
    #endregion
		
		public Provincia()
		{
			this._Localidades = new EntitySet<Localidade>(new Action<Localidade>(this.attach_Localidades), new Action<Localidade>(this.detach_Localidades));
			OnCreated();
		}
		
		[Column(Storage="_idProvincia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idProvincia
		{
			get
			{
				return this._idProvincia;
			}
			set
			{
				if ((this._idProvincia != value))
				{
					this.OnidProvinciaChanging(value);
					this.SendPropertyChanging();
					this._idProvincia = value;
					this.SendPropertyChanged("idProvincia");
					this.OnidProvinciaChanged();
				}
			}
		}
		
		[Column(Name="Provincia", Storage="_Provincia1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Provincia1
		{
			get
			{
				return this._Provincia1;
			}
			set
			{
				if ((this._Provincia1 != value))
				{
					this.OnProvincia1Changing(value);
					this.SendPropertyChanging();
					this._Provincia1 = value;
					this.SendPropertyChanged("Provincia1");
					this.OnProvincia1Changed();
				}
			}
		}
		
		[Association(Name="Provincia_Localidade", Storage="_Localidades", OtherKey="idProvincia")]
		public EntitySet<Localidade> Localidades
		{
			get
			{
				return this._Localidades;
			}
			set
			{
				this._Localidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Localidades(Localidade entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = this;
		}
		
		private void detach_Localidades(Localidade entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = null;
		}
	}
	
	[Table(Name="dbo.Remitos")]
	public partial class Remito : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRemito;
		
		private int _idCliente;
		
		private System.DateTime _FechaEmision;
		
		private string _Numero;
		
		private System.Nullable<int> _idTransportista;
		
		private string _DomicilioEntrega;
		
		private string _LocalidadEntrega;
		
		private string _ProvinciaEntrega;
		
		private string _CodPostalEntrega;
		
		private int _CantBultos;
		
		private string _OrdenCompra;
		
		private System.Nullable<System.DateTime> _FechaVto;
		
		private string _Observaciones;
		
		private int _idEstado;
		
		private System.Nullable<bool> _BajaLogica;
		
		private decimal _Total;
		
		private EntitySet<Remitos_Linea> _Remitos_Lineas;
		
		private EntityRef<Documentos_Estado> _Documentos_Estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRemitoChanging(int value);
    partial void OnidRemitoChanged();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnFechaEmisionChanging(System.DateTime value);
    partial void OnFechaEmisionChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnidTransportistaChanging(System.Nullable<int> value);
    partial void OnidTransportistaChanged();
    partial void OnDomicilioEntregaChanging(string value);
    partial void OnDomicilioEntregaChanged();
    partial void OnLocalidadEntregaChanging(string value);
    partial void OnLocalidadEntregaChanged();
    partial void OnProvinciaEntregaChanging(string value);
    partial void OnProvinciaEntregaChanged();
    partial void OnCodPostalEntregaChanging(string value);
    partial void OnCodPostalEntregaChanged();
    partial void OnCantBultosChanging(int value);
    partial void OnCantBultosChanged();
    partial void OnOrdenCompraChanging(string value);
    partial void OnOrdenCompraChanged();
    partial void OnFechaVtoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaVtoChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnBajaLogicaChanging(System.Nullable<bool> value);
    partial void OnBajaLogicaChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    #endregion
		
		public Remito()
		{
			this._Remitos_Lineas = new EntitySet<Remitos_Linea>(new Action<Remitos_Linea>(this.attach_Remitos_Lineas), new Action<Remitos_Linea>(this.detach_Remitos_Lineas));
			this._Documentos_Estado = default(EntityRef<Documentos_Estado>);
			OnCreated();
		}
		
		[Column(Storage="_idRemito", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRemito
		{
			get
			{
				return this._idRemito;
			}
			set
			{
				if ((this._idRemito != value))
				{
					this.OnidRemitoChanging(value);
					this.SendPropertyChanging();
					this._idRemito = value;
					this.SendPropertyChanged("idRemito");
					this.OnidRemitoChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int NOT NULL")]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_FechaEmision", DbType="DateTime NOT NULL")]
		public System.DateTime FechaEmision
		{
			get
			{
				return this._FechaEmision;
			}
			set
			{
				if ((this._FechaEmision != value))
				{
					this.OnFechaEmisionChanging(value);
					this.SendPropertyChanging();
					this._FechaEmision = value;
					this.SendPropertyChanged("FechaEmision");
					this.OnFechaEmisionChanged();
				}
			}
		}
		
		[Column(Storage="_Numero", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[Column(Storage="_idTransportista", DbType="Int")]
		public System.Nullable<int> idTransportista
		{
			get
			{
				return this._idTransportista;
			}
			set
			{
				if ((this._idTransportista != value))
				{
					this.OnidTransportistaChanging(value);
					this.SendPropertyChanging();
					this._idTransportista = value;
					this.SendPropertyChanged("idTransportista");
					this.OnidTransportistaChanged();
				}
			}
		}
		
		[Column(Storage="_DomicilioEntrega", DbType="VarChar(250)")]
		public string DomicilioEntrega
		{
			get
			{
				return this._DomicilioEntrega;
			}
			set
			{
				if ((this._DomicilioEntrega != value))
				{
					this.OnDomicilioEntregaChanging(value);
					this.SendPropertyChanging();
					this._DomicilioEntrega = value;
					this.SendPropertyChanged("DomicilioEntrega");
					this.OnDomicilioEntregaChanged();
				}
			}
		}
		
		[Column(Storage="_LocalidadEntrega", DbType="VarChar(100)")]
		public string LocalidadEntrega
		{
			get
			{
				return this._LocalidadEntrega;
			}
			set
			{
				if ((this._LocalidadEntrega != value))
				{
					this.OnLocalidadEntregaChanging(value);
					this.SendPropertyChanging();
					this._LocalidadEntrega = value;
					this.SendPropertyChanged("LocalidadEntrega");
					this.OnLocalidadEntregaChanged();
				}
			}
		}
		
		[Column(Storage="_ProvinciaEntrega", DbType="VarChar(100)")]
		public string ProvinciaEntrega
		{
			get
			{
				return this._ProvinciaEntrega;
			}
			set
			{
				if ((this._ProvinciaEntrega != value))
				{
					this.OnProvinciaEntregaChanging(value);
					this.SendPropertyChanging();
					this._ProvinciaEntrega = value;
					this.SendPropertyChanged("ProvinciaEntrega");
					this.OnProvinciaEntregaChanged();
				}
			}
		}
		
		[Column(Storage="_CodPostalEntrega", DbType="VarChar(10)")]
		public string CodPostalEntrega
		{
			get
			{
				return this._CodPostalEntrega;
			}
			set
			{
				if ((this._CodPostalEntrega != value))
				{
					this.OnCodPostalEntregaChanging(value);
					this.SendPropertyChanging();
					this._CodPostalEntrega = value;
					this.SendPropertyChanged("CodPostalEntrega");
					this.OnCodPostalEntregaChanged();
				}
			}
		}
		
		[Column(Storage="_CantBultos", DbType="Int NOT NULL")]
		public int CantBultos
		{
			get
			{
				return this._CantBultos;
			}
			set
			{
				if ((this._CantBultos != value))
				{
					this.OnCantBultosChanging(value);
					this.SendPropertyChanging();
					this._CantBultos = value;
					this.SendPropertyChanged("CantBultos");
					this.OnCantBultosChanged();
				}
			}
		}
		
		[Column(Storage="_OrdenCompra", DbType="VarChar(50)")]
		public string OrdenCompra
		{
			get
			{
				return this._OrdenCompra;
			}
			set
			{
				if ((this._OrdenCompra != value))
				{
					this.OnOrdenCompraChanging(value);
					this.SendPropertyChanging();
					this._OrdenCompra = value;
					this.SendPropertyChanged("OrdenCompra");
					this.OnOrdenCompraChanged();
				}
			}
		}
		
		[Column(Storage="_FechaVto", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaVto
		{
			get
			{
				return this._FechaVto;
			}
			set
			{
				if ((this._FechaVto != value))
				{
					this.OnFechaVtoChanging(value);
					this.SendPropertyChanging();
					this._FechaVto = value;
					this.SendPropertyChanged("FechaVto");
					this.OnFechaVtoChanged();
				}
			}
		}
		
		[Column(Storage="_Observaciones", DbType="VarChar(250)")]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[Column(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Documentos_Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[Column(Storage="_BajaLogica", DbType="Bit")]
		public System.Nullable<bool> BajaLogica
		{
			get
			{
				return this._BajaLogica;
			}
			set
			{
				if ((this._BajaLogica != value))
				{
					this.OnBajaLogicaChanging(value);
					this.SendPropertyChanging();
					this._BajaLogica = value;
					this.SendPropertyChanged("BajaLogica");
					this.OnBajaLogicaChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(18,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Association(Name="Remito_Remitos_Linea", Storage="_Remitos_Lineas", OtherKey="idRemito")]
		public EntitySet<Remitos_Linea> Remitos_Lineas
		{
			get
			{
				return this._Remitos_Lineas;
			}
			set
			{
				this._Remitos_Lineas.Assign(value);
			}
		}
		
		[Association(Name="Documentos_Estado_Remito", Storage="_Documentos_Estado", ThisKey="idEstado", IsForeignKey=true)]
		public Documentos_Estado Documentos_Estado
		{
			get
			{
				return this._Documentos_Estado.Entity;
			}
			set
			{
				Documentos_Estado previousValue = this._Documentos_Estado.Entity;
				if (((previousValue != value) 
							|| (this._Documentos_Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentos_Estado.Entity = null;
						previousValue.Remitos.Remove(this);
					}
					this._Documentos_Estado.Entity = value;
					if ((value != null))
					{
						value.Remitos.Add(this);
						this._idEstado = value.idEstado;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Documentos_Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Remitos_Lineas(Remitos_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Remito = this;
		}
		
		private void detach_Remitos_Lineas(Remitos_Linea entity)
		{
			this.SendPropertyChanging();
			entity.Remito = null;
		}
	}
}
#pragma warning restore 1591
