//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ConexcoFacturación {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ConexcoImpresionDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ConexcoImpresionDataSet : global::System.Data.DataSet {
        
        private FacturaImpresionDataTable tableFacturaImpresion;
        
        private FacturaLineaImpresionDataTable tableFacturaLineaImpresion;
        
        private FacturaBLineaImpresionDataTable tableFacturaBLineaImpresion;
        
        private RemitoImpresionDataTable tableRemitoImpresion;
        
        private RemitoLineaImpresionDataTable tableRemitoLineaImpresion;
        
        private PresupuestoImpresionDataTable tablePresupuestoImpresion;
        
        private PresupuestoImpresionCabeceraDataTable tablePresupuestoImpresionCabecera;
        
        private PresupuestoLineaImpresionDataTable tablePresupuestoLineaImpresion;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConexcoImpresionDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ConexcoImpresionDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FacturaImpresion"] != null)) {
                    base.Tables.Add(new FacturaImpresionDataTable(ds.Tables["FacturaImpresion"]));
                }
                if ((ds.Tables["FacturaLineaImpresion"] != null)) {
                    base.Tables.Add(new FacturaLineaImpresionDataTable(ds.Tables["FacturaLineaImpresion"]));
                }
                if ((ds.Tables["FacturaBLineaImpresion"] != null)) {
                    base.Tables.Add(new FacturaBLineaImpresionDataTable(ds.Tables["FacturaBLineaImpresion"]));
                }
                if ((ds.Tables["RemitoImpresion"] != null)) {
                    base.Tables.Add(new RemitoImpresionDataTable(ds.Tables["RemitoImpresion"]));
                }
                if ((ds.Tables["RemitoLineaImpresion"] != null)) {
                    base.Tables.Add(new RemitoLineaImpresionDataTable(ds.Tables["RemitoLineaImpresion"]));
                }
                if ((ds.Tables["PresupuestoImpresion"] != null)) {
                    base.Tables.Add(new PresupuestoImpresionDataTable(ds.Tables["PresupuestoImpresion"]));
                }
                if ((ds.Tables["PresupuestoImpresionCabecera"] != null)) {
                    base.Tables.Add(new PresupuestoImpresionCabeceraDataTable(ds.Tables["PresupuestoImpresionCabecera"]));
                }
                if ((ds.Tables["PresupuestoLineaImpresion"] != null)) {
                    base.Tables.Add(new PresupuestoLineaImpresionDataTable(ds.Tables["PresupuestoLineaImpresion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FacturaImpresionDataTable FacturaImpresion {
            get {
                return this.tableFacturaImpresion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FacturaLineaImpresionDataTable FacturaLineaImpresion {
            get {
                return this.tableFacturaLineaImpresion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FacturaBLineaImpresionDataTable FacturaBLineaImpresion {
            get {
                return this.tableFacturaBLineaImpresion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RemitoImpresionDataTable RemitoImpresion {
            get {
                return this.tableRemitoImpresion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RemitoLineaImpresionDataTable RemitoLineaImpresion {
            get {
                return this.tableRemitoLineaImpresion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PresupuestoImpresionDataTable PresupuestoImpresion {
            get {
                return this.tablePresupuestoImpresion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PresupuestoImpresionCabeceraDataTable PresupuestoImpresionCabecera {
            get {
                return this.tablePresupuestoImpresionCabecera;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PresupuestoLineaImpresionDataTable PresupuestoLineaImpresion {
            get {
                return this.tablePresupuestoLineaImpresion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ConexcoImpresionDataSet cln = ((ConexcoImpresionDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FacturaImpresion"] != null)) {
                    base.Tables.Add(new FacturaImpresionDataTable(ds.Tables["FacturaImpresion"]));
                }
                if ((ds.Tables["FacturaLineaImpresion"] != null)) {
                    base.Tables.Add(new FacturaLineaImpresionDataTable(ds.Tables["FacturaLineaImpresion"]));
                }
                if ((ds.Tables["FacturaBLineaImpresion"] != null)) {
                    base.Tables.Add(new FacturaBLineaImpresionDataTable(ds.Tables["FacturaBLineaImpresion"]));
                }
                if ((ds.Tables["RemitoImpresion"] != null)) {
                    base.Tables.Add(new RemitoImpresionDataTable(ds.Tables["RemitoImpresion"]));
                }
                if ((ds.Tables["RemitoLineaImpresion"] != null)) {
                    base.Tables.Add(new RemitoLineaImpresionDataTable(ds.Tables["RemitoLineaImpresion"]));
                }
                if ((ds.Tables["PresupuestoImpresion"] != null)) {
                    base.Tables.Add(new PresupuestoImpresionDataTable(ds.Tables["PresupuestoImpresion"]));
                }
                if ((ds.Tables["PresupuestoImpresionCabecera"] != null)) {
                    base.Tables.Add(new PresupuestoImpresionCabeceraDataTable(ds.Tables["PresupuestoImpresionCabecera"]));
                }
                if ((ds.Tables["PresupuestoLineaImpresion"] != null)) {
                    base.Tables.Add(new PresupuestoLineaImpresionDataTable(ds.Tables["PresupuestoLineaImpresion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFacturaImpresion = ((FacturaImpresionDataTable)(base.Tables["FacturaImpresion"]));
            if ((initTable == true)) {
                if ((this.tableFacturaImpresion != null)) {
                    this.tableFacturaImpresion.InitVars();
                }
            }
            this.tableFacturaLineaImpresion = ((FacturaLineaImpresionDataTable)(base.Tables["FacturaLineaImpresion"]));
            if ((initTable == true)) {
                if ((this.tableFacturaLineaImpresion != null)) {
                    this.tableFacturaLineaImpresion.InitVars();
                }
            }
            this.tableFacturaBLineaImpresion = ((FacturaBLineaImpresionDataTable)(base.Tables["FacturaBLineaImpresion"]));
            if ((initTable == true)) {
                if ((this.tableFacturaBLineaImpresion != null)) {
                    this.tableFacturaBLineaImpresion.InitVars();
                }
            }
            this.tableRemitoImpresion = ((RemitoImpresionDataTable)(base.Tables["RemitoImpresion"]));
            if ((initTable == true)) {
                if ((this.tableRemitoImpresion != null)) {
                    this.tableRemitoImpresion.InitVars();
                }
            }
            this.tableRemitoLineaImpresion = ((RemitoLineaImpresionDataTable)(base.Tables["RemitoLineaImpresion"]));
            if ((initTable == true)) {
                if ((this.tableRemitoLineaImpresion != null)) {
                    this.tableRemitoLineaImpresion.InitVars();
                }
            }
            this.tablePresupuestoImpresion = ((PresupuestoImpresionDataTable)(base.Tables["PresupuestoImpresion"]));
            if ((initTable == true)) {
                if ((this.tablePresupuestoImpresion != null)) {
                    this.tablePresupuestoImpresion.InitVars();
                }
            }
            this.tablePresupuestoImpresionCabecera = ((PresupuestoImpresionCabeceraDataTable)(base.Tables["PresupuestoImpresionCabecera"]));
            if ((initTable == true)) {
                if ((this.tablePresupuestoImpresionCabecera != null)) {
                    this.tablePresupuestoImpresionCabecera.InitVars();
                }
            }
            this.tablePresupuestoLineaImpresion = ((PresupuestoLineaImpresionDataTable)(base.Tables["PresupuestoLineaImpresion"]));
            if ((initTable == true)) {
                if ((this.tablePresupuestoLineaImpresion != null)) {
                    this.tablePresupuestoLineaImpresion.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ConexcoImpresionDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ConexcoImpresionDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFacturaImpresion = new FacturaImpresionDataTable();
            base.Tables.Add(this.tableFacturaImpresion);
            this.tableFacturaLineaImpresion = new FacturaLineaImpresionDataTable();
            base.Tables.Add(this.tableFacturaLineaImpresion);
            this.tableFacturaBLineaImpresion = new FacturaBLineaImpresionDataTable();
            base.Tables.Add(this.tableFacturaBLineaImpresion);
            this.tableRemitoImpresion = new RemitoImpresionDataTable();
            base.Tables.Add(this.tableRemitoImpresion);
            this.tableRemitoLineaImpresion = new RemitoLineaImpresionDataTable();
            base.Tables.Add(this.tableRemitoLineaImpresion);
            this.tablePresupuestoImpresion = new PresupuestoImpresionDataTable();
            base.Tables.Add(this.tablePresupuestoImpresion);
            this.tablePresupuestoImpresionCabecera = new PresupuestoImpresionCabeceraDataTable();
            base.Tables.Add(this.tablePresupuestoImpresionCabecera);
            this.tablePresupuestoLineaImpresion = new PresupuestoLineaImpresionDataTable();
            base.Tables.Add(this.tablePresupuestoLineaImpresion);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFacturaImpresion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFacturaLineaImpresion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFacturaBLineaImpresion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRemitoImpresion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRemitoLineaImpresion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePresupuestoImpresion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePresupuestoImpresionCabecera() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePresupuestoLineaImpresion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ConexcoImpresionDataSet ds = new ConexcoImpresionDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void FacturaImpresionRowChangeEventHandler(object sender, FacturaImpresionRowChangeEvent e);
        
        public delegate void FacturaLineaImpresionRowChangeEventHandler(object sender, FacturaLineaImpresionRowChangeEvent e);
        
        public delegate void FacturaBLineaImpresionRowChangeEventHandler(object sender, FacturaBLineaImpresionRowChangeEvent e);
        
        public delegate void RemitoImpresionRowChangeEventHandler(object sender, RemitoImpresionRowChangeEvent e);
        
        public delegate void RemitoLineaImpresionRowChangeEventHandler(object sender, RemitoLineaImpresionRowChangeEvent e);
        
        public delegate void PresupuestoImpresionRowChangeEventHandler(object sender, PresupuestoImpresionRowChangeEvent e);
        
        public delegate void PresupuestoImpresionCabeceraRowChangeEventHandler(object sender, PresupuestoImpresionCabeceraRowChangeEvent e);
        
        public delegate void PresupuestoLineaImpresionRowChangeEventHandler(object sender, PresupuestoLineaImpresionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FacturaImpresionDataTable : global::System.Data.TypedTableBase<FacturaImpresionRow> {
            
            private global::System.Data.DataColumn columnidFactura;
            
            private global::System.Data.DataColumn columnidCliente;
            
            private global::System.Data.DataColumn columnidDomicilioCliente;
            
            private global::System.Data.DataColumn columnFechaEmision;
            
            private global::System.Data.DataColumn columnidTipoDocumento;
            
            private global::System.Data.DataColumn columnNumero;
            
            private global::System.Data.DataColumn columnRemito;
            
            private global::System.Data.DataColumn columnOrdenCompra;
            
            private global::System.Data.DataColumn columnFechaVto;
            
            private global::System.Data.DataColumn columnObservaciones;
            
            private global::System.Data.DataColumn columnCondiciones;
            
            private global::System.Data.DataColumn columnSonPesos;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnDescuento;
            
            private global::System.Data.DataColumn columnSubtotal;
            
            private global::System.Data.DataColumn columnTotalIVA;
            
            private global::System.Data.DataColumn columnTotalNeto;
            
            private global::System.Data.DataColumn columnidEstado;
            
            private global::System.Data.DataColumn columnBajaLogica;
            
            private global::System.Data.DataColumn columnRazonSocial;
            
            private global::System.Data.DataColumn columnCUIT;
            
            private global::System.Data.DataColumn columnCodigo;
            
            private global::System.Data.DataColumn columnDomicilio;
            
            private global::System.Data.DataColumn columnLocalidad;
            
            private global::System.Data.DataColumn columnProvincia;
            
            private global::System.Data.DataColumn columnCodPostal;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaImpresionDataTable() {
                this.TableName = "FacturaImpresion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaImpresionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FacturaImpresionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idFacturaColumn {
                get {
                    return this.columnidFactura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idDomicilioClienteColumn {
                get {
                    return this.columnidDomicilioCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaEmisionColumn {
                get {
                    return this.columnFechaEmision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idTipoDocumentoColumn {
                get {
                    return this.columnidTipoDocumento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemitoColumn {
                get {
                    return this.columnRemito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrdenCompraColumn {
                get {
                    return this.columnOrdenCompra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaVtoColumn {
                get {
                    return this.columnFechaVto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CondicionesColumn {
                get {
                    return this.columnCondiciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SonPesosColumn {
                get {
                    return this.columnSonPesos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescuentoColumn {
                get {
                    return this.columnDescuento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubtotalColumn {
                get {
                    return this.columnSubtotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalIVAColumn {
                get {
                    return this.columnTotalIVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalNetoColumn {
                get {
                    return this.columnTotalNeto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idEstadoColumn {
                get {
                    return this.columnidEstado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BajaLogicaColumn {
                get {
                    return this.columnBajaLogica;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RazonSocialColumn {
                get {
                    return this.columnRazonSocial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUITColumn {
                get {
                    return this.columnCUIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DomicilioColumn {
                get {
                    return this.columnDomicilio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalidadColumn {
                get {
                    return this.columnLocalidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvinciaColumn {
                get {
                    return this.columnProvincia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodPostalColumn {
                get {
                    return this.columnCodPostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaImpresionRow this[int index] {
                get {
                    return ((FacturaImpresionRow)(this.Rows[index]));
                }
            }
            
            public event FacturaImpresionRowChangeEventHandler FacturaImpresionRowChanging;
            
            public event FacturaImpresionRowChangeEventHandler FacturaImpresionRowChanged;
            
            public event FacturaImpresionRowChangeEventHandler FacturaImpresionRowDeleting;
            
            public event FacturaImpresionRowChangeEventHandler FacturaImpresionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFacturaImpresionRow(FacturaImpresionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaImpresionRow AddFacturaImpresionRow(
                        int idCliente, 
                        int idDomicilioCliente, 
                        System.DateTime FechaEmision, 
                        int idTipoDocumento, 
                        string Numero, 
                        string Remito, 
                        string OrdenCompra, 
                        System.DateTime FechaVto, 
                        string Observaciones, 
                        string Condiciones, 
                        string SonPesos, 
                        decimal Total, 
                        decimal Descuento, 
                        decimal Subtotal, 
                        decimal TotalIVA, 
                        decimal TotalNeto, 
                        int idEstado, 
                        bool BajaLogica, 
                        string RazonSocial, 
                        string CUIT, 
                        string Codigo, 
                        string Domicilio, 
                        string Localidad, 
                        string Provincia, 
                        string CodPostal, 
                        string Descripcion) {
                FacturaImpresionRow rowFacturaImpresionRow = ((FacturaImpresionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        idCliente,
                        idDomicilioCliente,
                        FechaEmision,
                        idTipoDocumento,
                        Numero,
                        Remito,
                        OrdenCompra,
                        FechaVto,
                        Observaciones,
                        Condiciones,
                        SonPesos,
                        Total,
                        Descuento,
                        Subtotal,
                        TotalIVA,
                        TotalNeto,
                        idEstado,
                        BajaLogica,
                        RazonSocial,
                        CUIT,
                        Codigo,
                        Domicilio,
                        Localidad,
                        Provincia,
                        CodPostal,
                        Descripcion};
                rowFacturaImpresionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFacturaImpresionRow);
                return rowFacturaImpresionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaImpresionRow FindByidFactura(int idFactura) {
                return ((FacturaImpresionRow)(this.Rows.Find(new object[] {
                            idFactura})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FacturaImpresionDataTable cln = ((FacturaImpresionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FacturaImpresionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidFactura = base.Columns["idFactura"];
                this.columnidCliente = base.Columns["idCliente"];
                this.columnidDomicilioCliente = base.Columns["idDomicilioCliente"];
                this.columnFechaEmision = base.Columns["FechaEmision"];
                this.columnidTipoDocumento = base.Columns["idTipoDocumento"];
                this.columnNumero = base.Columns["Numero"];
                this.columnRemito = base.Columns["Remito"];
                this.columnOrdenCompra = base.Columns["OrdenCompra"];
                this.columnFechaVto = base.Columns["FechaVto"];
                this.columnObservaciones = base.Columns["Observaciones"];
                this.columnCondiciones = base.Columns["Condiciones"];
                this.columnSonPesos = base.Columns["SonPesos"];
                this.columnTotal = base.Columns["Total"];
                this.columnDescuento = base.Columns["Descuento"];
                this.columnSubtotal = base.Columns["Subtotal"];
                this.columnTotalIVA = base.Columns["TotalIVA"];
                this.columnTotalNeto = base.Columns["TotalNeto"];
                this.columnidEstado = base.Columns["idEstado"];
                this.columnBajaLogica = base.Columns["BajaLogica"];
                this.columnRazonSocial = base.Columns["RazonSocial"];
                this.columnCUIT = base.Columns["CUIT"];
                this.columnCodigo = base.Columns["Codigo"];
                this.columnDomicilio = base.Columns["Domicilio"];
                this.columnLocalidad = base.Columns["Localidad"];
                this.columnProvincia = base.Columns["Provincia"];
                this.columnCodPostal = base.Columns["CodPostal"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidFactura = new global::System.Data.DataColumn("idFactura", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidFactura);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
                this.columnidDomicilioCliente = new global::System.Data.DataColumn("idDomicilioCliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidDomicilioCliente);
                this.columnFechaEmision = new global::System.Data.DataColumn("FechaEmision", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaEmision);
                this.columnidTipoDocumento = new global::System.Data.DataColumn("idTipoDocumento", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidTipoDocumento);
                this.columnNumero = new global::System.Data.DataColumn("Numero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero);
                this.columnRemito = new global::System.Data.DataColumn("Remito", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemito);
                this.columnOrdenCompra = new global::System.Data.DataColumn("OrdenCompra", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrdenCompra);
                this.columnFechaVto = new global::System.Data.DataColumn("FechaVto", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaVto);
                this.columnObservaciones = new global::System.Data.DataColumn("Observaciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservaciones);
                this.columnCondiciones = new global::System.Data.DataColumn("Condiciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondiciones);
                this.columnSonPesos = new global::System.Data.DataColumn("SonPesos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSonPesos);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnDescuento = new global::System.Data.DataColumn("Descuento", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescuento);
                this.columnSubtotal = new global::System.Data.DataColumn("Subtotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubtotal);
                this.columnTotalIVA = new global::System.Data.DataColumn("TotalIVA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalIVA);
                this.columnTotalNeto = new global::System.Data.DataColumn("TotalNeto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNeto);
                this.columnidEstado = new global::System.Data.DataColumn("idEstado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidEstado);
                this.columnBajaLogica = new global::System.Data.DataColumn("BajaLogica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBajaLogica);
                this.columnRazonSocial = new global::System.Data.DataColumn("RazonSocial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRazonSocial);
                this.columnCUIT = new global::System.Data.DataColumn("CUIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUIT);
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnDomicilio = new global::System.Data.DataColumn("Domicilio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomicilio);
                this.columnLocalidad = new global::System.Data.DataColumn("Localidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalidad);
                this.columnProvincia = new global::System.Data.DataColumn("Provincia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvincia);
                this.columnCodPostal = new global::System.Data.DataColumn("CodPostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodPostal);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidFactura}, true));
                this.columnidFactura.AutoIncrement = true;
                this.columnidFactura.AllowDBNull = false;
                this.columnidFactura.ReadOnly = true;
                this.columnidFactura.Unique = true;
                this.columnidCliente.AllowDBNull = false;
                this.columnidDomicilioCliente.AllowDBNull = false;
                this.columnFechaEmision.AllowDBNull = false;
                this.columnidTipoDocumento.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnNumero.MaxLength = 50;
                this.columnRemito.MaxLength = 50;
                this.columnOrdenCompra.MaxLength = 50;
                this.columnObservaciones.MaxLength = 250;
                this.columnCondiciones.MaxLength = 250;
                this.columnSonPesos.MaxLength = 250;
                this.columnTotal.AllowDBNull = false;
                this.columnTotalNeto.AllowDBNull = false;
                this.columnidEstado.AllowDBNull = false;
                this.columnRazonSocial.MaxLength = 250;
                this.columnCUIT.AllowDBNull = false;
                this.columnCUIT.MaxLength = 20;
                this.columnCodigo.MaxLength = 10;
                this.columnDomicilio.AllowDBNull = false;
                this.columnDomicilio.MaxLength = 250;
                this.columnLocalidad.AllowDBNull = false;
                this.columnLocalidad.MaxLength = 100;
                this.columnProvincia.AllowDBNull = false;
                this.columnProvincia.MaxLength = 100;
                this.columnCodPostal.AllowDBNull = false;
                this.columnCodPostal.MaxLength = 10;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaImpresionRow NewFacturaImpresionRow() {
                return ((FacturaImpresionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FacturaImpresionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FacturaImpresionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FacturaImpresionRowChanged != null)) {
                    this.FacturaImpresionRowChanged(this, new FacturaImpresionRowChangeEvent(((FacturaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FacturaImpresionRowChanging != null)) {
                    this.FacturaImpresionRowChanging(this, new FacturaImpresionRowChangeEvent(((FacturaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FacturaImpresionRowDeleted != null)) {
                    this.FacturaImpresionRowDeleted(this, new FacturaImpresionRowChangeEvent(((FacturaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FacturaImpresionRowDeleting != null)) {
                    this.FacturaImpresionRowDeleting(this, new FacturaImpresionRowChangeEvent(((FacturaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFacturaImpresionRow(FacturaImpresionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ConexcoImpresionDataSet ds = new ConexcoImpresionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FacturaImpresionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FacturaLineaImpresionDataTable : global::System.Data.TypedTableBase<FacturaLineaImpresionRow> {
            
            private global::System.Data.DataColumn columnidFacturasLinea;
            
            private global::System.Data.DataColumn columnidFactura;
            
            private global::System.Data.DataColumn columnidArticulo;
            
            private global::System.Data.DataColumn columnCantidad;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnCodigoYColor;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnTotalLinea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaLineaImpresionDataTable() {
                this.TableName = "FacturaLineaImpresion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaLineaImpresionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FacturaLineaImpresionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idFacturasLineaColumn {
                get {
                    return this.columnidFacturasLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idFacturaColumn {
                get {
                    return this.columnidFactura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idArticuloColumn {
                get {
                    return this.columnidArticulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoYColorColumn {
                get {
                    return this.columnCodigoYColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalLineaColumn {
                get {
                    return this.columnTotalLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaLineaImpresionRow this[int index] {
                get {
                    return ((FacturaLineaImpresionRow)(this.Rows[index]));
                }
            }
            
            public event FacturaLineaImpresionRowChangeEventHandler FacturaLineaImpresionRowChanging;
            
            public event FacturaLineaImpresionRowChangeEventHandler FacturaLineaImpresionRowChanged;
            
            public event FacturaLineaImpresionRowChangeEventHandler FacturaLineaImpresionRowDeleting;
            
            public event FacturaLineaImpresionRowChangeEventHandler FacturaLineaImpresionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFacturaLineaImpresionRow(FacturaLineaImpresionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaLineaImpresionRow AddFacturaLineaImpresionRow(int idFactura, int idArticulo, decimal Cantidad, decimal Precio, string CodigoYColor, string Descripcion, decimal TotalLinea) {
                FacturaLineaImpresionRow rowFacturaLineaImpresionRow = ((FacturaLineaImpresionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        idFactura,
                        idArticulo,
                        Cantidad,
                        Precio,
                        CodigoYColor,
                        Descripcion,
                        TotalLinea};
                rowFacturaLineaImpresionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFacturaLineaImpresionRow);
                return rowFacturaLineaImpresionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaLineaImpresionRow FindByidFacturasLinea(int idFacturasLinea) {
                return ((FacturaLineaImpresionRow)(this.Rows.Find(new object[] {
                            idFacturasLinea})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FacturaLineaImpresionDataTable cln = ((FacturaLineaImpresionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FacturaLineaImpresionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidFacturasLinea = base.Columns["idFacturasLinea"];
                this.columnidFactura = base.Columns["idFactura"];
                this.columnidArticulo = base.Columns["idArticulo"];
                this.columnCantidad = base.Columns["Cantidad"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnCodigoYColor = base.Columns["CodigoYColor"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnTotalLinea = base.Columns["TotalLinea"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidFacturasLinea = new global::System.Data.DataColumn("idFacturasLinea", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidFacturasLinea);
                this.columnidFactura = new global::System.Data.DataColumn("idFactura", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidFactura);
                this.columnidArticulo = new global::System.Data.DataColumn("idArticulo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidArticulo);
                this.columnCantidad = new global::System.Data.DataColumn("Cantidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnCodigoYColor = new global::System.Data.DataColumn("CodigoYColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoYColor);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnTotalLinea = new global::System.Data.DataColumn("TotalLinea", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLinea);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidFacturasLinea}, true));
                this.columnidFacturasLinea.AutoIncrement = true;
                this.columnidFacturasLinea.AllowDBNull = false;
                this.columnidFacturasLinea.ReadOnly = true;
                this.columnidFacturasLinea.Unique = true;
                this.columnidFactura.AllowDBNull = false;
                this.columnidArticulo.AllowDBNull = false;
                this.columnCantidad.AllowDBNull = false;
                this.columnPrecio.AllowDBNull = false;
                this.columnCodigoYColor.ReadOnly = true;
                this.columnCodigoYColor.MaxLength = 31;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 250;
                this.columnTotalLinea.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaLineaImpresionRow NewFacturaLineaImpresionRow() {
                return ((FacturaLineaImpresionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FacturaLineaImpresionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FacturaLineaImpresionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FacturaLineaImpresionRowChanged != null)) {
                    this.FacturaLineaImpresionRowChanged(this, new FacturaLineaImpresionRowChangeEvent(((FacturaLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FacturaLineaImpresionRowChanging != null)) {
                    this.FacturaLineaImpresionRowChanging(this, new FacturaLineaImpresionRowChangeEvent(((FacturaLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FacturaLineaImpresionRowDeleted != null)) {
                    this.FacturaLineaImpresionRowDeleted(this, new FacturaLineaImpresionRowChangeEvent(((FacturaLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FacturaLineaImpresionRowDeleting != null)) {
                    this.FacturaLineaImpresionRowDeleting(this, new FacturaLineaImpresionRowChangeEvent(((FacturaLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFacturaLineaImpresionRow(FacturaLineaImpresionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ConexcoImpresionDataSet ds = new ConexcoImpresionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FacturaLineaImpresionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FacturaBLineaImpresionDataTable : global::System.Data.TypedTableBase<FacturaBLineaImpresionRow> {
            
            private global::System.Data.DataColumn columnidFacturasLinea;
            
            private global::System.Data.DataColumn columnidFactura;
            
            private global::System.Data.DataColumn columnidArticulo;
            
            private global::System.Data.DataColumn columnCantidad;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnCodigoYColor;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnTotalLinea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaBLineaImpresionDataTable() {
                this.TableName = "FacturaBLineaImpresion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaBLineaImpresionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FacturaBLineaImpresionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idFacturasLineaColumn {
                get {
                    return this.columnidFacturasLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idFacturaColumn {
                get {
                    return this.columnidFactura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idArticuloColumn {
                get {
                    return this.columnidArticulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoYColorColumn {
                get {
                    return this.columnCodigoYColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalLineaColumn {
                get {
                    return this.columnTotalLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaBLineaImpresionRow this[int index] {
                get {
                    return ((FacturaBLineaImpresionRow)(this.Rows[index]));
                }
            }
            
            public event FacturaBLineaImpresionRowChangeEventHandler FacturaBLineaImpresionRowChanging;
            
            public event FacturaBLineaImpresionRowChangeEventHandler FacturaBLineaImpresionRowChanged;
            
            public event FacturaBLineaImpresionRowChangeEventHandler FacturaBLineaImpresionRowDeleting;
            
            public event FacturaBLineaImpresionRowChangeEventHandler FacturaBLineaImpresionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFacturaBLineaImpresionRow(FacturaBLineaImpresionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaBLineaImpresionRow AddFacturaBLineaImpresionRow(int idFactura, int idArticulo, decimal Cantidad, decimal Precio, string CodigoYColor, string Descripcion, decimal TotalLinea) {
                FacturaBLineaImpresionRow rowFacturaBLineaImpresionRow = ((FacturaBLineaImpresionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        idFactura,
                        idArticulo,
                        Cantidad,
                        Precio,
                        CodigoYColor,
                        Descripcion,
                        TotalLinea};
                rowFacturaBLineaImpresionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFacturaBLineaImpresionRow);
                return rowFacturaBLineaImpresionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaBLineaImpresionRow FindByidFacturasLinea(int idFacturasLinea) {
                return ((FacturaBLineaImpresionRow)(this.Rows.Find(new object[] {
                            idFacturasLinea})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FacturaBLineaImpresionDataTable cln = ((FacturaBLineaImpresionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FacturaBLineaImpresionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidFacturasLinea = base.Columns["idFacturasLinea"];
                this.columnidFactura = base.Columns["idFactura"];
                this.columnidArticulo = base.Columns["idArticulo"];
                this.columnCantidad = base.Columns["Cantidad"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnCodigoYColor = base.Columns["CodigoYColor"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnTotalLinea = base.Columns["TotalLinea"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidFacturasLinea = new global::System.Data.DataColumn("idFacturasLinea", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidFacturasLinea);
                this.columnidFactura = new global::System.Data.DataColumn("idFactura", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidFactura);
                this.columnidArticulo = new global::System.Data.DataColumn("idArticulo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidArticulo);
                this.columnCantidad = new global::System.Data.DataColumn("Cantidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnCodigoYColor = new global::System.Data.DataColumn("CodigoYColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoYColor);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnTotalLinea = new global::System.Data.DataColumn("TotalLinea", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLinea);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidFacturasLinea}, true));
                this.columnidFacturasLinea.AutoIncrement = true;
                this.columnidFacturasLinea.AllowDBNull = false;
                this.columnidFacturasLinea.ReadOnly = true;
                this.columnidFacturasLinea.Unique = true;
                this.columnidFactura.AllowDBNull = false;
                this.columnidArticulo.AllowDBNull = false;
                this.columnCantidad.AllowDBNull = false;
                this.columnPrecio.ReadOnly = true;
                this.columnCodigoYColor.ReadOnly = true;
                this.columnCodigoYColor.MaxLength = 30;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 250;
                this.columnTotalLinea.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaBLineaImpresionRow NewFacturaBLineaImpresionRow() {
                return ((FacturaBLineaImpresionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FacturaBLineaImpresionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FacturaBLineaImpresionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FacturaBLineaImpresionRowChanged != null)) {
                    this.FacturaBLineaImpresionRowChanged(this, new FacturaBLineaImpresionRowChangeEvent(((FacturaBLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FacturaBLineaImpresionRowChanging != null)) {
                    this.FacturaBLineaImpresionRowChanging(this, new FacturaBLineaImpresionRowChangeEvent(((FacturaBLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FacturaBLineaImpresionRowDeleted != null)) {
                    this.FacturaBLineaImpresionRowDeleted(this, new FacturaBLineaImpresionRowChangeEvent(((FacturaBLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FacturaBLineaImpresionRowDeleting != null)) {
                    this.FacturaBLineaImpresionRowDeleting(this, new FacturaBLineaImpresionRowChangeEvent(((FacturaBLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFacturaBLineaImpresionRow(FacturaBLineaImpresionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ConexcoImpresionDataSet ds = new ConexcoImpresionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FacturaBLineaImpresionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RemitoImpresionDataTable : global::System.Data.TypedTableBase<RemitoImpresionRow> {
            
            private global::System.Data.DataColumn columnidRemito;
            
            private global::System.Data.DataColumn columnidCliente;
            
            private global::System.Data.DataColumn columnFechaEmision;
            
            private global::System.Data.DataColumn columnNumero;
            
            private global::System.Data.DataColumn columnidTransportista;
            
            private global::System.Data.DataColumn columnDomicilioEntrega;
            
            private global::System.Data.DataColumn columnLocalidadEntrega;
            
            private global::System.Data.DataColumn columnProvinciaEntrega;
            
            private global::System.Data.DataColumn columnCodPostalEntrega;
            
            private global::System.Data.DataColumn columnCantBultos;
            
            private global::System.Data.DataColumn columnOrdenCompra;
            
            private global::System.Data.DataColumn columnFechaVto;
            
            private global::System.Data.DataColumn columnObservaciones;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnidEstado;
            
            private global::System.Data.DataColumn columnBajaLogica;
            
            private global::System.Data.DataColumn columnRazonSocial;
            
            private global::System.Data.DataColumn columnCUIT;
            
            private global::System.Data.DataColumn columnNombreTransp;
            
            private global::System.Data.DataColumn columnCUITTransp;
            
            private global::System.Data.DataColumn columnDomicilioTransp;
            
            private global::System.Data.DataColumn columnLocalidadTransp;
            
            private global::System.Data.DataColumn columnCodPostalTransp;
            
            private global::System.Data.DataColumn columnClienteIVA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoImpresionDataTable() {
                this.TableName = "RemitoImpresion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RemitoImpresionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RemitoImpresionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idRemitoColumn {
                get {
                    return this.columnidRemito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaEmisionColumn {
                get {
                    return this.columnFechaEmision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idTransportistaColumn {
                get {
                    return this.columnidTransportista;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DomicilioEntregaColumn {
                get {
                    return this.columnDomicilioEntrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalidadEntregaColumn {
                get {
                    return this.columnLocalidadEntrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvinciaEntregaColumn {
                get {
                    return this.columnProvinciaEntrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodPostalEntregaColumn {
                get {
                    return this.columnCodPostalEntrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantBultosColumn {
                get {
                    return this.columnCantBultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrdenCompraColumn {
                get {
                    return this.columnOrdenCompra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaVtoColumn {
                get {
                    return this.columnFechaVto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idEstadoColumn {
                get {
                    return this.columnidEstado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BajaLogicaColumn {
                get {
                    return this.columnBajaLogica;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RazonSocialColumn {
                get {
                    return this.columnRazonSocial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUITColumn {
                get {
                    return this.columnCUIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreTranspColumn {
                get {
                    return this.columnNombreTransp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUITTranspColumn {
                get {
                    return this.columnCUITTransp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DomicilioTranspColumn {
                get {
                    return this.columnDomicilioTransp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalidadTranspColumn {
                get {
                    return this.columnLocalidadTransp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodPostalTranspColumn {
                get {
                    return this.columnCodPostalTransp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteIVAColumn {
                get {
                    return this.columnClienteIVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoImpresionRow this[int index] {
                get {
                    return ((RemitoImpresionRow)(this.Rows[index]));
                }
            }
            
            public event RemitoImpresionRowChangeEventHandler RemitoImpresionRowChanging;
            
            public event RemitoImpresionRowChangeEventHandler RemitoImpresionRowChanged;
            
            public event RemitoImpresionRowChangeEventHandler RemitoImpresionRowDeleting;
            
            public event RemitoImpresionRowChangeEventHandler RemitoImpresionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRemitoImpresionRow(RemitoImpresionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoImpresionRow AddRemitoImpresionRow(
                        int idCliente, 
                        System.DateTime FechaEmision, 
                        string Numero, 
                        int idTransportista, 
                        string DomicilioEntrega, 
                        string LocalidadEntrega, 
                        string ProvinciaEntrega, 
                        string CodPostalEntrega, 
                        int CantBultos, 
                        string OrdenCompra, 
                        System.DateTime FechaVto, 
                        string Observaciones, 
                        decimal Total, 
                        int idEstado, 
                        bool BajaLogica, 
                        string RazonSocial, 
                        string CUIT, 
                        string NombreTransp, 
                        string CUITTransp, 
                        string DomicilioTransp, 
                        string LocalidadTransp, 
                        string CodPostalTransp, 
                        string ClienteIVA) {
                RemitoImpresionRow rowRemitoImpresionRow = ((RemitoImpresionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        idCliente,
                        FechaEmision,
                        Numero,
                        idTransportista,
                        DomicilioEntrega,
                        LocalidadEntrega,
                        ProvinciaEntrega,
                        CodPostalEntrega,
                        CantBultos,
                        OrdenCompra,
                        FechaVto,
                        Observaciones,
                        Total,
                        idEstado,
                        BajaLogica,
                        RazonSocial,
                        CUIT,
                        NombreTransp,
                        CUITTransp,
                        DomicilioTransp,
                        LocalidadTransp,
                        CodPostalTransp,
                        ClienteIVA};
                rowRemitoImpresionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRemitoImpresionRow);
                return rowRemitoImpresionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoImpresionRow FindByidRemito(int idRemito) {
                return ((RemitoImpresionRow)(this.Rows.Find(new object[] {
                            idRemito})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RemitoImpresionDataTable cln = ((RemitoImpresionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RemitoImpresionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidRemito = base.Columns["idRemito"];
                this.columnidCliente = base.Columns["idCliente"];
                this.columnFechaEmision = base.Columns["FechaEmision"];
                this.columnNumero = base.Columns["Numero"];
                this.columnidTransportista = base.Columns["idTransportista"];
                this.columnDomicilioEntrega = base.Columns["DomicilioEntrega"];
                this.columnLocalidadEntrega = base.Columns["LocalidadEntrega"];
                this.columnProvinciaEntrega = base.Columns["ProvinciaEntrega"];
                this.columnCodPostalEntrega = base.Columns["CodPostalEntrega"];
                this.columnCantBultos = base.Columns["CantBultos"];
                this.columnOrdenCompra = base.Columns["OrdenCompra"];
                this.columnFechaVto = base.Columns["FechaVto"];
                this.columnObservaciones = base.Columns["Observaciones"];
                this.columnTotal = base.Columns["Total"];
                this.columnidEstado = base.Columns["idEstado"];
                this.columnBajaLogica = base.Columns["BajaLogica"];
                this.columnRazonSocial = base.Columns["RazonSocial"];
                this.columnCUIT = base.Columns["CUIT"];
                this.columnNombreTransp = base.Columns["NombreTransp"];
                this.columnCUITTransp = base.Columns["CUITTransp"];
                this.columnDomicilioTransp = base.Columns["DomicilioTransp"];
                this.columnLocalidadTransp = base.Columns["LocalidadTransp"];
                this.columnCodPostalTransp = base.Columns["CodPostalTransp"];
                this.columnClienteIVA = base.Columns["ClienteIVA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidRemito = new global::System.Data.DataColumn("idRemito", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidRemito);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
                this.columnFechaEmision = new global::System.Data.DataColumn("FechaEmision", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaEmision);
                this.columnNumero = new global::System.Data.DataColumn("Numero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero);
                this.columnidTransportista = new global::System.Data.DataColumn("idTransportista", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidTransportista);
                this.columnDomicilioEntrega = new global::System.Data.DataColumn("DomicilioEntrega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomicilioEntrega);
                this.columnLocalidadEntrega = new global::System.Data.DataColumn("LocalidadEntrega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalidadEntrega);
                this.columnProvinciaEntrega = new global::System.Data.DataColumn("ProvinciaEntrega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvinciaEntrega);
                this.columnCodPostalEntrega = new global::System.Data.DataColumn("CodPostalEntrega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodPostalEntrega);
                this.columnCantBultos = new global::System.Data.DataColumn("CantBultos", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantBultos);
                this.columnOrdenCompra = new global::System.Data.DataColumn("OrdenCompra", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrdenCompra);
                this.columnFechaVto = new global::System.Data.DataColumn("FechaVto", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaVto);
                this.columnObservaciones = new global::System.Data.DataColumn("Observaciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservaciones);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnidEstado = new global::System.Data.DataColumn("idEstado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidEstado);
                this.columnBajaLogica = new global::System.Data.DataColumn("BajaLogica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBajaLogica);
                this.columnRazonSocial = new global::System.Data.DataColumn("RazonSocial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRazonSocial);
                this.columnCUIT = new global::System.Data.DataColumn("CUIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUIT);
                this.columnNombreTransp = new global::System.Data.DataColumn("NombreTransp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreTransp);
                this.columnCUITTransp = new global::System.Data.DataColumn("CUITTransp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUITTransp);
                this.columnDomicilioTransp = new global::System.Data.DataColumn("DomicilioTransp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomicilioTransp);
                this.columnLocalidadTransp = new global::System.Data.DataColumn("LocalidadTransp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalidadTransp);
                this.columnCodPostalTransp = new global::System.Data.DataColumn("CodPostalTransp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodPostalTransp);
                this.columnClienteIVA = new global::System.Data.DataColumn("ClienteIVA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteIVA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidRemito}, true));
                this.columnidRemito.AutoIncrement = true;
                this.columnidRemito.AllowDBNull = false;
                this.columnidRemito.ReadOnly = true;
                this.columnidRemito.Unique = true;
                this.columnidCliente.AllowDBNull = false;
                this.columnFechaEmision.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnNumero.MaxLength = 50;
                this.columnDomicilioEntrega.MaxLength = 250;
                this.columnLocalidadEntrega.MaxLength = 100;
                this.columnProvinciaEntrega.MaxLength = 100;
                this.columnCodPostalEntrega.MaxLength = 10;
                this.columnCantBultos.AllowDBNull = false;
                this.columnOrdenCompra.MaxLength = 50;
                this.columnObservaciones.MaxLength = 250;
                this.columnTotal.AllowDBNull = false;
                this.columnidEstado.AllowDBNull = false;
                this.columnRazonSocial.MaxLength = 250;
                this.columnCUIT.AllowDBNull = false;
                this.columnCUIT.MaxLength = 20;
                this.columnNombreTransp.AllowDBNull = false;
                this.columnNombreTransp.MaxLength = 250;
                this.columnCUITTransp.AllowDBNull = false;
                this.columnCUITTransp.MaxLength = 20;
                this.columnDomicilioTransp.MaxLength = 250;
                this.columnLocalidadTransp.MaxLength = 100;
                this.columnCodPostalTransp.MaxLength = 10;
                this.columnClienteIVA.AllowDBNull = false;
                this.columnClienteIVA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoImpresionRow NewRemitoImpresionRow() {
                return ((RemitoImpresionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RemitoImpresionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RemitoImpresionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RemitoImpresionRowChanged != null)) {
                    this.RemitoImpresionRowChanged(this, new RemitoImpresionRowChangeEvent(((RemitoImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RemitoImpresionRowChanging != null)) {
                    this.RemitoImpresionRowChanging(this, new RemitoImpresionRowChangeEvent(((RemitoImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RemitoImpresionRowDeleted != null)) {
                    this.RemitoImpresionRowDeleted(this, new RemitoImpresionRowChangeEvent(((RemitoImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RemitoImpresionRowDeleting != null)) {
                    this.RemitoImpresionRowDeleting(this, new RemitoImpresionRowChangeEvent(((RemitoImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRemitoImpresionRow(RemitoImpresionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ConexcoImpresionDataSet ds = new ConexcoImpresionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RemitoImpresionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RemitoLineaImpresionDataTable : global::System.Data.TypedTableBase<RemitoLineaImpresionRow> {
            
            private global::System.Data.DataColumn columnidRemitosLinea;
            
            private global::System.Data.DataColumn columnidRemito;
            
            private global::System.Data.DataColumn columnidArticulo;
            
            private global::System.Data.DataColumn columnEnvases;
            
            private global::System.Data.DataColumn columnCantidad;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnCodigoYColor;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnTotalLinea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoLineaImpresionDataTable() {
                this.TableName = "RemitoLineaImpresion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RemitoLineaImpresionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RemitoLineaImpresionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idRemitosLineaColumn {
                get {
                    return this.columnidRemitosLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idRemitoColumn {
                get {
                    return this.columnidRemito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idArticuloColumn {
                get {
                    return this.columnidArticulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnvasesColumn {
                get {
                    return this.columnEnvases;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoYColorColumn {
                get {
                    return this.columnCodigoYColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalLineaColumn {
                get {
                    return this.columnTotalLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoLineaImpresionRow this[int index] {
                get {
                    return ((RemitoLineaImpresionRow)(this.Rows[index]));
                }
            }
            
            public event RemitoLineaImpresionRowChangeEventHandler RemitoLineaImpresionRowChanging;
            
            public event RemitoLineaImpresionRowChangeEventHandler RemitoLineaImpresionRowChanged;
            
            public event RemitoLineaImpresionRowChangeEventHandler RemitoLineaImpresionRowDeleting;
            
            public event RemitoLineaImpresionRowChangeEventHandler RemitoLineaImpresionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRemitoLineaImpresionRow(RemitoLineaImpresionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoLineaImpresionRow AddRemitoLineaImpresionRow(int idRemito, int idArticulo, decimal Envases, decimal Cantidad, decimal Precio, string CodigoYColor, string Descripcion, decimal TotalLinea) {
                RemitoLineaImpresionRow rowRemitoLineaImpresionRow = ((RemitoLineaImpresionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        idRemito,
                        idArticulo,
                        Envases,
                        Cantidad,
                        Precio,
                        CodigoYColor,
                        Descripcion,
                        TotalLinea};
                rowRemitoLineaImpresionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRemitoLineaImpresionRow);
                return rowRemitoLineaImpresionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoLineaImpresionRow FindByidRemitosLinea(int idRemitosLinea) {
                return ((RemitoLineaImpresionRow)(this.Rows.Find(new object[] {
                            idRemitosLinea})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RemitoLineaImpresionDataTable cln = ((RemitoLineaImpresionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RemitoLineaImpresionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidRemitosLinea = base.Columns["idRemitosLinea"];
                this.columnidRemito = base.Columns["idRemito"];
                this.columnidArticulo = base.Columns["idArticulo"];
                this.columnEnvases = base.Columns["Envases"];
                this.columnCantidad = base.Columns["Cantidad"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnCodigoYColor = base.Columns["CodigoYColor"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnTotalLinea = base.Columns["TotalLinea"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidRemitosLinea = new global::System.Data.DataColumn("idRemitosLinea", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidRemitosLinea);
                this.columnidRemito = new global::System.Data.DataColumn("idRemito", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidRemito);
                this.columnidArticulo = new global::System.Data.DataColumn("idArticulo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidArticulo);
                this.columnEnvases = new global::System.Data.DataColumn("Envases", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnvases);
                this.columnCantidad = new global::System.Data.DataColumn("Cantidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnCodigoYColor = new global::System.Data.DataColumn("CodigoYColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoYColor);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnTotalLinea = new global::System.Data.DataColumn("TotalLinea", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLinea);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidRemitosLinea}, true));
                this.columnidRemitosLinea.AutoIncrement = true;
                this.columnidRemitosLinea.AllowDBNull = false;
                this.columnidRemitosLinea.ReadOnly = true;
                this.columnidRemitosLinea.Unique = true;
                this.columnidRemito.AllowDBNull = false;
                this.columnidArticulo.AllowDBNull = false;
                this.columnEnvases.AllowDBNull = false;
                this.columnCantidad.AllowDBNull = false;
                this.columnPrecio.AllowDBNull = false;
                this.columnCodigoYColor.ReadOnly = true;
                this.columnCodigoYColor.MaxLength = 30;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 250;
                this.columnTotalLinea.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoLineaImpresionRow NewRemitoLineaImpresionRow() {
                return ((RemitoLineaImpresionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RemitoLineaImpresionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RemitoLineaImpresionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RemitoLineaImpresionRowChanged != null)) {
                    this.RemitoLineaImpresionRowChanged(this, new RemitoLineaImpresionRowChangeEvent(((RemitoLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RemitoLineaImpresionRowChanging != null)) {
                    this.RemitoLineaImpresionRowChanging(this, new RemitoLineaImpresionRowChangeEvent(((RemitoLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RemitoLineaImpresionRowDeleted != null)) {
                    this.RemitoLineaImpresionRowDeleted(this, new RemitoLineaImpresionRowChangeEvent(((RemitoLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RemitoLineaImpresionRowDeleting != null)) {
                    this.RemitoLineaImpresionRowDeleting(this, new RemitoLineaImpresionRowChangeEvent(((RemitoLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRemitoLineaImpresionRow(RemitoLineaImpresionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ConexcoImpresionDataSet ds = new ConexcoImpresionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RemitoLineaImpresionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PresupuestoImpresionDataTable : global::System.Data.TypedTableBase<PresupuestoImpresionRow> {
            
            private global::System.Data.DataColumn columnidPresupuesto;
            
            private global::System.Data.DataColumn columnidCliente;
            
            private global::System.Data.DataColumn columnFechaEmision;
            
            private global::System.Data.DataColumn columnNumero;
            
            private global::System.Data.DataColumn columnFechaVto;
            
            private global::System.Data.DataColumn columnCondiciones;
            
            private global::System.Data.DataColumn columnDisponibilidad;
            
            private global::System.Data.DataColumn columnDomicilioEntrega;
            
            private global::System.Data.DataColumn columnLocalidadEntrega;
            
            private global::System.Data.DataColumn columnProvinciaEntrega;
            
            private global::System.Data.DataColumn columnCodPostalEntrega;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnDescuento;
            
            private global::System.Data.DataColumn columnSubtotal;
            
            private global::System.Data.DataColumn columnTotalIVA;
            
            private global::System.Data.DataColumn columnTotalNeto;
            
            private global::System.Data.DataColumn columnidEstado;
            
            private global::System.Data.DataColumn columnBajaLogica;
            
            private global::System.Data.DataColumn columnRazonSocial;
            
            private global::System.Data.DataColumn columnCUIT;
            
            private global::System.Data.DataColumn columnCodigo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionDataTable() {
                this.TableName = "PresupuestoImpresion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PresupuestoImpresionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PresupuestoImpresionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idPresupuestoColumn {
                get {
                    return this.columnidPresupuesto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaEmisionColumn {
                get {
                    return this.columnFechaEmision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaVtoColumn {
                get {
                    return this.columnFechaVto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CondicionesColumn {
                get {
                    return this.columnCondiciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisponibilidadColumn {
                get {
                    return this.columnDisponibilidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DomicilioEntregaColumn {
                get {
                    return this.columnDomicilioEntrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalidadEntregaColumn {
                get {
                    return this.columnLocalidadEntrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvinciaEntregaColumn {
                get {
                    return this.columnProvinciaEntrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodPostalEntregaColumn {
                get {
                    return this.columnCodPostalEntrega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescuentoColumn {
                get {
                    return this.columnDescuento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubtotalColumn {
                get {
                    return this.columnSubtotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalIVAColumn {
                get {
                    return this.columnTotalIVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalNetoColumn {
                get {
                    return this.columnTotalNeto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idEstadoColumn {
                get {
                    return this.columnidEstado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BajaLogicaColumn {
                get {
                    return this.columnBajaLogica;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RazonSocialColumn {
                get {
                    return this.columnRazonSocial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUITColumn {
                get {
                    return this.columnCUIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionRow this[int index] {
                get {
                    return ((PresupuestoImpresionRow)(this.Rows[index]));
                }
            }
            
            public event PresupuestoImpresionRowChangeEventHandler PresupuestoImpresionRowChanging;
            
            public event PresupuestoImpresionRowChangeEventHandler PresupuestoImpresionRowChanged;
            
            public event PresupuestoImpresionRowChangeEventHandler PresupuestoImpresionRowDeleting;
            
            public event PresupuestoImpresionRowChangeEventHandler PresupuestoImpresionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPresupuestoImpresionRow(PresupuestoImpresionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionRow AddPresupuestoImpresionRow(
                        int idCliente, 
                        System.DateTime FechaEmision, 
                        string Numero, 
                        System.DateTime FechaVto, 
                        string Condiciones, 
                        string Disponibilidad, 
                        string DomicilioEntrega, 
                        string LocalidadEntrega, 
                        string ProvinciaEntrega, 
                        string CodPostalEntrega, 
                        decimal Total, 
                        decimal Descuento, 
                        decimal Subtotal, 
                        decimal TotalIVA, 
                        decimal TotalNeto, 
                        int idEstado, 
                        bool BajaLogica, 
                        string RazonSocial, 
                        string CUIT, 
                        string Codigo) {
                PresupuestoImpresionRow rowPresupuestoImpresionRow = ((PresupuestoImpresionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        idCliente,
                        FechaEmision,
                        Numero,
                        FechaVto,
                        Condiciones,
                        Disponibilidad,
                        DomicilioEntrega,
                        LocalidadEntrega,
                        ProvinciaEntrega,
                        CodPostalEntrega,
                        Total,
                        Descuento,
                        Subtotal,
                        TotalIVA,
                        TotalNeto,
                        idEstado,
                        BajaLogica,
                        RazonSocial,
                        CUIT,
                        Codigo};
                rowPresupuestoImpresionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPresupuestoImpresionRow);
                return rowPresupuestoImpresionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionRow FindByidPresupuesto(int idPresupuesto) {
                return ((PresupuestoImpresionRow)(this.Rows.Find(new object[] {
                            idPresupuesto})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PresupuestoImpresionDataTable cln = ((PresupuestoImpresionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PresupuestoImpresionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidPresupuesto = base.Columns["idPresupuesto"];
                this.columnidCliente = base.Columns["idCliente"];
                this.columnFechaEmision = base.Columns["FechaEmision"];
                this.columnNumero = base.Columns["Numero"];
                this.columnFechaVto = base.Columns["FechaVto"];
                this.columnCondiciones = base.Columns["Condiciones"];
                this.columnDisponibilidad = base.Columns["Disponibilidad"];
                this.columnDomicilioEntrega = base.Columns["DomicilioEntrega"];
                this.columnLocalidadEntrega = base.Columns["LocalidadEntrega"];
                this.columnProvinciaEntrega = base.Columns["ProvinciaEntrega"];
                this.columnCodPostalEntrega = base.Columns["CodPostalEntrega"];
                this.columnTotal = base.Columns["Total"];
                this.columnDescuento = base.Columns["Descuento"];
                this.columnSubtotal = base.Columns["Subtotal"];
                this.columnTotalIVA = base.Columns["TotalIVA"];
                this.columnTotalNeto = base.Columns["TotalNeto"];
                this.columnidEstado = base.Columns["idEstado"];
                this.columnBajaLogica = base.Columns["BajaLogica"];
                this.columnRazonSocial = base.Columns["RazonSocial"];
                this.columnCUIT = base.Columns["CUIT"];
                this.columnCodigo = base.Columns["Codigo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidPresupuesto = new global::System.Data.DataColumn("idPresupuesto", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidPresupuesto);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
                this.columnFechaEmision = new global::System.Data.DataColumn("FechaEmision", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaEmision);
                this.columnNumero = new global::System.Data.DataColumn("Numero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero);
                this.columnFechaVto = new global::System.Data.DataColumn("FechaVto", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaVto);
                this.columnCondiciones = new global::System.Data.DataColumn("Condiciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondiciones);
                this.columnDisponibilidad = new global::System.Data.DataColumn("Disponibilidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisponibilidad);
                this.columnDomicilioEntrega = new global::System.Data.DataColumn("DomicilioEntrega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomicilioEntrega);
                this.columnLocalidadEntrega = new global::System.Data.DataColumn("LocalidadEntrega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalidadEntrega);
                this.columnProvinciaEntrega = new global::System.Data.DataColumn("ProvinciaEntrega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvinciaEntrega);
                this.columnCodPostalEntrega = new global::System.Data.DataColumn("CodPostalEntrega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodPostalEntrega);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnDescuento = new global::System.Data.DataColumn("Descuento", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescuento);
                this.columnSubtotal = new global::System.Data.DataColumn("Subtotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubtotal);
                this.columnTotalIVA = new global::System.Data.DataColumn("TotalIVA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalIVA);
                this.columnTotalNeto = new global::System.Data.DataColumn("TotalNeto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNeto);
                this.columnidEstado = new global::System.Data.DataColumn("idEstado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidEstado);
                this.columnBajaLogica = new global::System.Data.DataColumn("BajaLogica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBajaLogica);
                this.columnRazonSocial = new global::System.Data.DataColumn("RazonSocial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRazonSocial);
                this.columnCUIT = new global::System.Data.DataColumn("CUIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUIT);
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidPresupuesto}, true));
                this.columnidPresupuesto.AutoIncrement = true;
                this.columnidPresupuesto.AllowDBNull = false;
                this.columnidPresupuesto.ReadOnly = true;
                this.columnidPresupuesto.Unique = true;
                this.columnidCliente.AllowDBNull = false;
                this.columnFechaEmision.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnNumero.MaxLength = 50;
                this.columnCondiciones.MaxLength = 250;
                this.columnDisponibilidad.MaxLength = 250;
                this.columnDomicilioEntrega.MaxLength = 250;
                this.columnLocalidadEntrega.MaxLength = 100;
                this.columnProvinciaEntrega.MaxLength = 100;
                this.columnCodPostalEntrega.MaxLength = 50;
                this.columnTotal.AllowDBNull = false;
                this.columnTotalNeto.AllowDBNull = false;
                this.columnidEstado.AllowDBNull = false;
                this.columnRazonSocial.MaxLength = 250;
                this.columnCUIT.AllowDBNull = false;
                this.columnCUIT.MaxLength = 20;
                this.columnCodigo.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionRow NewPresupuestoImpresionRow() {
                return ((PresupuestoImpresionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PresupuestoImpresionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PresupuestoImpresionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PresupuestoImpresionRowChanged != null)) {
                    this.PresupuestoImpresionRowChanged(this, new PresupuestoImpresionRowChangeEvent(((PresupuestoImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PresupuestoImpresionRowChanging != null)) {
                    this.PresupuestoImpresionRowChanging(this, new PresupuestoImpresionRowChangeEvent(((PresupuestoImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PresupuestoImpresionRowDeleted != null)) {
                    this.PresupuestoImpresionRowDeleted(this, new PresupuestoImpresionRowChangeEvent(((PresupuestoImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PresupuestoImpresionRowDeleting != null)) {
                    this.PresupuestoImpresionRowDeleting(this, new PresupuestoImpresionRowChangeEvent(((PresupuestoImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePresupuestoImpresionRow(PresupuestoImpresionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ConexcoImpresionDataSet ds = new ConexcoImpresionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PresupuestoImpresionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PresupuestoImpresionCabeceraDataTable : global::System.Data.TypedTableBase<PresupuestoImpresionCabeceraRow> {
            
            private global::System.Data.DataColumn columnidEmpresa;
            
            private global::System.Data.DataColumn columnRazonSocial;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnApellido;
            
            private global::System.Data.DataColumn columnCUIT;
            
            private global::System.Data.DataColumn columnidCondicionIVA;
            
            private global::System.Data.DataColumn columnDomicilio;
            
            private global::System.Data.DataColumn columnLocalidad;
            
            private global::System.Data.DataColumn columnProvincia;
            
            private global::System.Data.DataColumn columnCodPostal;
            
            private global::System.Data.DataColumn columnTelefono;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnInicioActividades;
            
            private global::System.Data.DataColumn columnIngBrutos;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnWeb;
            
            private global::System.Data.DataColumn columnPorcentajeIVA;
            
            private global::System.Data.DataColumn columnContrasenia;
            
            private global::System.Data.DataColumn columnIVA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionCabeceraDataTable() {
                this.TableName = "PresupuestoImpresionCabecera";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PresupuestoImpresionCabeceraDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PresupuestoImpresionCabeceraDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idEmpresaColumn {
                get {
                    return this.columnidEmpresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RazonSocialColumn {
                get {
                    return this.columnRazonSocial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApellidoColumn {
                get {
                    return this.columnApellido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUITColumn {
                get {
                    return this.columnCUIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idCondicionIVAColumn {
                get {
                    return this.columnidCondicionIVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DomicilioColumn {
                get {
                    return this.columnDomicilio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalidadColumn {
                get {
                    return this.columnLocalidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvinciaColumn {
                get {
                    return this.columnProvincia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodPostalColumn {
                get {
                    return this.columnCodPostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefonoColumn {
                get {
                    return this.columnTelefono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InicioActividadesColumn {
                get {
                    return this.columnInicioActividades;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IngBrutosColumn {
                get {
                    return this.columnIngBrutos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebColumn {
                get {
                    return this.columnWeb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PorcentajeIVAColumn {
                get {
                    return this.columnPorcentajeIVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContraseniaColumn {
                get {
                    return this.columnContrasenia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IVAColumn {
                get {
                    return this.columnIVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionCabeceraRow this[int index] {
                get {
                    return ((PresupuestoImpresionCabeceraRow)(this.Rows[index]));
                }
            }
            
            public event PresupuestoImpresionCabeceraRowChangeEventHandler PresupuestoImpresionCabeceraRowChanging;
            
            public event PresupuestoImpresionCabeceraRowChangeEventHandler PresupuestoImpresionCabeceraRowChanged;
            
            public event PresupuestoImpresionCabeceraRowChangeEventHandler PresupuestoImpresionCabeceraRowDeleting;
            
            public event PresupuestoImpresionCabeceraRowChangeEventHandler PresupuestoImpresionCabeceraRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPresupuestoImpresionCabeceraRow(PresupuestoImpresionCabeceraRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionCabeceraRow AddPresupuestoImpresionCabeceraRow(
                        string RazonSocial, 
                        string Nombre, 
                        string Apellido, 
                        string CUIT, 
                        int idCondicionIVA, 
                        string Domicilio, 
                        string Localidad, 
                        string Provincia, 
                        string CodPostal, 
                        string Telefono, 
                        string Fax, 
                        System.DateTime InicioActividades, 
                        string IngBrutos, 
                        string Email, 
                        string Web, 
                        decimal PorcentajeIVA, 
                        string Contrasenia, 
                        string IVA) {
                PresupuestoImpresionCabeceraRow rowPresupuestoImpresionCabeceraRow = ((PresupuestoImpresionCabeceraRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RazonSocial,
                        Nombre,
                        Apellido,
                        CUIT,
                        idCondicionIVA,
                        Domicilio,
                        Localidad,
                        Provincia,
                        CodPostal,
                        Telefono,
                        Fax,
                        InicioActividades,
                        IngBrutos,
                        Email,
                        Web,
                        PorcentajeIVA,
                        Contrasenia,
                        IVA};
                rowPresupuestoImpresionCabeceraRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPresupuestoImpresionCabeceraRow);
                return rowPresupuestoImpresionCabeceraRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionCabeceraRow FindByidEmpresa(int idEmpresa) {
                return ((PresupuestoImpresionCabeceraRow)(this.Rows.Find(new object[] {
                            idEmpresa})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PresupuestoImpresionCabeceraDataTable cln = ((PresupuestoImpresionCabeceraDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PresupuestoImpresionCabeceraDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidEmpresa = base.Columns["idEmpresa"];
                this.columnRazonSocial = base.Columns["RazonSocial"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnApellido = base.Columns["Apellido"];
                this.columnCUIT = base.Columns["CUIT"];
                this.columnidCondicionIVA = base.Columns["idCondicionIVA"];
                this.columnDomicilio = base.Columns["Domicilio"];
                this.columnLocalidad = base.Columns["Localidad"];
                this.columnProvincia = base.Columns["Provincia"];
                this.columnCodPostal = base.Columns["CodPostal"];
                this.columnTelefono = base.Columns["Telefono"];
                this.columnFax = base.Columns["Fax"];
                this.columnInicioActividades = base.Columns["InicioActividades"];
                this.columnIngBrutos = base.Columns["IngBrutos"];
                this.columnEmail = base.Columns["Email"];
                this.columnWeb = base.Columns["Web"];
                this.columnPorcentajeIVA = base.Columns["PorcentajeIVA"];
                this.columnContrasenia = base.Columns["Contrasenia"];
                this.columnIVA = base.Columns["IVA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidEmpresa = new global::System.Data.DataColumn("idEmpresa", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidEmpresa);
                this.columnRazonSocial = new global::System.Data.DataColumn("RazonSocial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRazonSocial);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnApellido = new global::System.Data.DataColumn("Apellido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApellido);
                this.columnCUIT = new global::System.Data.DataColumn("CUIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUIT);
                this.columnidCondicionIVA = new global::System.Data.DataColumn("idCondicionIVA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCondicionIVA);
                this.columnDomicilio = new global::System.Data.DataColumn("Domicilio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomicilio);
                this.columnLocalidad = new global::System.Data.DataColumn("Localidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalidad);
                this.columnProvincia = new global::System.Data.DataColumn("Provincia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvincia);
                this.columnCodPostal = new global::System.Data.DataColumn("CodPostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodPostal);
                this.columnTelefono = new global::System.Data.DataColumn("Telefono", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefono);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnInicioActividades = new global::System.Data.DataColumn("InicioActividades", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInicioActividades);
                this.columnIngBrutos = new global::System.Data.DataColumn("IngBrutos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngBrutos);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnWeb = new global::System.Data.DataColumn("Web", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeb);
                this.columnPorcentajeIVA = new global::System.Data.DataColumn("PorcentajeIVA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentajeIVA);
                this.columnContrasenia = new global::System.Data.DataColumn("Contrasenia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContrasenia);
                this.columnIVA = new global::System.Data.DataColumn("IVA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIVA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidEmpresa}, true));
                this.columnidEmpresa.AutoIncrement = true;
                this.columnidEmpresa.AllowDBNull = false;
                this.columnidEmpresa.ReadOnly = true;
                this.columnidEmpresa.Unique = true;
                this.columnRazonSocial.MaxLength = 250;
                this.columnNombre.MaxLength = 50;
                this.columnApellido.MaxLength = 50;
                this.columnCUIT.AllowDBNull = false;
                this.columnCUIT.MaxLength = 20;
                this.columnidCondicionIVA.AllowDBNull = false;
                this.columnDomicilio.AllowDBNull = false;
                this.columnDomicilio.MaxLength = 250;
                this.columnLocalidad.AllowDBNull = false;
                this.columnLocalidad.MaxLength = 100;
                this.columnProvincia.AllowDBNull = false;
                this.columnProvincia.MaxLength = 100;
                this.columnCodPostal.AllowDBNull = false;
                this.columnCodPostal.MaxLength = 10;
                this.columnTelefono.MaxLength = 20;
                this.columnFax.MaxLength = 20;
                this.columnInicioActividades.AllowDBNull = false;
                this.columnIngBrutos.AllowDBNull = false;
                this.columnIngBrutos.MaxLength = 50;
                this.columnEmail.MaxLength = 50;
                this.columnWeb.MaxLength = 50;
                this.columnContrasenia.MaxLength = 20;
                this.columnIVA.AllowDBNull = false;
                this.columnIVA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionCabeceraRow NewPresupuestoImpresionCabeceraRow() {
                return ((PresupuestoImpresionCabeceraRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PresupuestoImpresionCabeceraRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PresupuestoImpresionCabeceraRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PresupuestoImpresionCabeceraRowChanged != null)) {
                    this.PresupuestoImpresionCabeceraRowChanged(this, new PresupuestoImpresionCabeceraRowChangeEvent(((PresupuestoImpresionCabeceraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PresupuestoImpresionCabeceraRowChanging != null)) {
                    this.PresupuestoImpresionCabeceraRowChanging(this, new PresupuestoImpresionCabeceraRowChangeEvent(((PresupuestoImpresionCabeceraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PresupuestoImpresionCabeceraRowDeleted != null)) {
                    this.PresupuestoImpresionCabeceraRowDeleted(this, new PresupuestoImpresionCabeceraRowChangeEvent(((PresupuestoImpresionCabeceraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PresupuestoImpresionCabeceraRowDeleting != null)) {
                    this.PresupuestoImpresionCabeceraRowDeleting(this, new PresupuestoImpresionCabeceraRowChangeEvent(((PresupuestoImpresionCabeceraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePresupuestoImpresionCabeceraRow(PresupuestoImpresionCabeceraRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ConexcoImpresionDataSet ds = new ConexcoImpresionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PresupuestoImpresionCabeceraDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PresupuestoLineaImpresionDataTable : global::System.Data.TypedTableBase<PresupuestoLineaImpresionRow> {
            
            private global::System.Data.DataColumn columnidPresupuestosLinea;
            
            private global::System.Data.DataColumn columnidPresupuesto;
            
            private global::System.Data.DataColumn columnidArticulo;
            
            private global::System.Data.DataColumn columnCantidad;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnCodigoYColor;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnTotalLinea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoLineaImpresionDataTable() {
                this.TableName = "PresupuestoLineaImpresion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PresupuestoLineaImpresionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PresupuestoLineaImpresionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idPresupuestosLineaColumn {
                get {
                    return this.columnidPresupuestosLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idPresupuestoColumn {
                get {
                    return this.columnidPresupuesto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idArticuloColumn {
                get {
                    return this.columnidArticulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoYColorColumn {
                get {
                    return this.columnCodigoYColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalLineaColumn {
                get {
                    return this.columnTotalLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoLineaImpresionRow this[int index] {
                get {
                    return ((PresupuestoLineaImpresionRow)(this.Rows[index]));
                }
            }
            
            public event PresupuestoLineaImpresionRowChangeEventHandler PresupuestoLineaImpresionRowChanging;
            
            public event PresupuestoLineaImpresionRowChangeEventHandler PresupuestoLineaImpresionRowChanged;
            
            public event PresupuestoLineaImpresionRowChangeEventHandler PresupuestoLineaImpresionRowDeleting;
            
            public event PresupuestoLineaImpresionRowChangeEventHandler PresupuestoLineaImpresionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPresupuestoLineaImpresionRow(PresupuestoLineaImpresionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoLineaImpresionRow AddPresupuestoLineaImpresionRow(int idPresupuesto, int idArticulo, int Cantidad, decimal Precio, string CodigoYColor, string Descripcion, decimal TotalLinea) {
                PresupuestoLineaImpresionRow rowPresupuestoLineaImpresionRow = ((PresupuestoLineaImpresionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        idPresupuesto,
                        idArticulo,
                        Cantidad,
                        Precio,
                        CodigoYColor,
                        Descripcion,
                        TotalLinea};
                rowPresupuestoLineaImpresionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPresupuestoLineaImpresionRow);
                return rowPresupuestoLineaImpresionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoLineaImpresionRow FindByidPresupuestosLinea(int idPresupuestosLinea) {
                return ((PresupuestoLineaImpresionRow)(this.Rows.Find(new object[] {
                            idPresupuestosLinea})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PresupuestoLineaImpresionDataTable cln = ((PresupuestoLineaImpresionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PresupuestoLineaImpresionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidPresupuestosLinea = base.Columns["idPresupuestosLinea"];
                this.columnidPresupuesto = base.Columns["idPresupuesto"];
                this.columnidArticulo = base.Columns["idArticulo"];
                this.columnCantidad = base.Columns["Cantidad"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnCodigoYColor = base.Columns["CodigoYColor"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnTotalLinea = base.Columns["TotalLinea"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidPresupuestosLinea = new global::System.Data.DataColumn("idPresupuestosLinea", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidPresupuestosLinea);
                this.columnidPresupuesto = new global::System.Data.DataColumn("idPresupuesto", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidPresupuesto);
                this.columnidArticulo = new global::System.Data.DataColumn("idArticulo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidArticulo);
                this.columnCantidad = new global::System.Data.DataColumn("Cantidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnCodigoYColor = new global::System.Data.DataColumn("CodigoYColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoYColor);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnTotalLinea = new global::System.Data.DataColumn("TotalLinea", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLinea);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidPresupuestosLinea}, true));
                this.columnidPresupuestosLinea.AutoIncrement = true;
                this.columnidPresupuestosLinea.AllowDBNull = false;
                this.columnidPresupuestosLinea.ReadOnly = true;
                this.columnidPresupuestosLinea.Unique = true;
                this.columnidPresupuesto.AllowDBNull = false;
                this.columnidArticulo.AllowDBNull = false;
                this.columnCantidad.AllowDBNull = false;
                this.columnPrecio.AllowDBNull = false;
                this.columnCodigoYColor.ReadOnly = true;
                this.columnCodigoYColor.MaxLength = 30;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 250;
                this.columnTotalLinea.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoLineaImpresionRow NewPresupuestoLineaImpresionRow() {
                return ((PresupuestoLineaImpresionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PresupuestoLineaImpresionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PresupuestoLineaImpresionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PresupuestoLineaImpresionRowChanged != null)) {
                    this.PresupuestoLineaImpresionRowChanged(this, new PresupuestoLineaImpresionRowChangeEvent(((PresupuestoLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PresupuestoLineaImpresionRowChanging != null)) {
                    this.PresupuestoLineaImpresionRowChanging(this, new PresupuestoLineaImpresionRowChangeEvent(((PresupuestoLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PresupuestoLineaImpresionRowDeleted != null)) {
                    this.PresupuestoLineaImpresionRowDeleted(this, new PresupuestoLineaImpresionRowChangeEvent(((PresupuestoLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PresupuestoLineaImpresionRowDeleting != null)) {
                    this.PresupuestoLineaImpresionRowDeleting(this, new PresupuestoLineaImpresionRowChangeEvent(((PresupuestoLineaImpresionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePresupuestoLineaImpresionRow(PresupuestoLineaImpresionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ConexcoImpresionDataSet ds = new ConexcoImpresionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PresupuestoLineaImpresionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FacturaImpresionRow : global::System.Data.DataRow {
            
            private FacturaImpresionDataTable tableFacturaImpresion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaImpresionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFacturaImpresion = ((FacturaImpresionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idFactura {
                get {
                    return ((int)(this[this.tableFacturaImpresion.idFacturaColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.idFacturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idCliente {
                get {
                    return ((int)(this[this.tableFacturaImpresion.idClienteColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idDomicilioCliente {
                get {
                    return ((int)(this[this.tableFacturaImpresion.idDomicilioClienteColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.idDomicilioClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaEmision {
                get {
                    return ((global::System.DateTime)(this[this.tableFacturaImpresion.FechaEmisionColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.FechaEmisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idTipoDocumento {
                get {
                    return ((int)(this[this.tableFacturaImpresion.idTipoDocumentoColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.idTipoDocumentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero {
                get {
                    return ((string)(this[this.tableFacturaImpresion.NumeroColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remito {
                get {
                    try {
                        return ((string)(this[this.tableFacturaImpresion.RemitoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remito\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.RemitoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrdenCompra {
                get {
                    try {
                        return ((string)(this[this.tableFacturaImpresion.OrdenCompraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrdenCompra\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.OrdenCompraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaVto {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFacturaImpresion.FechaVtoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaVto\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.FechaVtoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tableFacturaImpresion.ObservacionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Observaciones\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.ObservacionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condiciones {
                get {
                    try {
                        return ((string)(this[this.tableFacturaImpresion.CondicionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Condiciones\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.CondicionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SonPesos {
                get {
                    try {
                        return ((string)(this[this.tableFacturaImpresion.SonPesosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SonPesos\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.SonPesosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    return ((decimal)(this[this.tableFacturaImpresion.TotalColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Descuento {
                get {
                    try {
                        return ((decimal)(this[this.tableFacturaImpresion.DescuentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descuento\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.DescuentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Subtotal {
                get {
                    try {
                        return ((decimal)(this[this.tableFacturaImpresion.SubtotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subtotal\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.SubtotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalIVA {
                get {
                    try {
                        return ((decimal)(this[this.tableFacturaImpresion.TotalIVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalIVA\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.TotalIVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalNeto {
                get {
                    return ((decimal)(this[this.tableFacturaImpresion.TotalNetoColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.TotalNetoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idEstado {
                get {
                    return ((int)(this[this.tableFacturaImpresion.idEstadoColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.idEstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BajaLogica {
                get {
                    try {
                        return ((bool)(this[this.tableFacturaImpresion.BajaLogicaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BajaLogica\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.BajaLogicaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RazonSocial {
                get {
                    try {
                        return ((string)(this[this.tableFacturaImpresion.RazonSocialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RazonSocial\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.RazonSocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUIT {
                get {
                    return ((string)(this[this.tableFacturaImpresion.CUITColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.CUITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Codigo {
                get {
                    try {
                        return ((string)(this[this.tableFacturaImpresion.CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Codigo\' in table \'FacturaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaImpresion.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Domicilio {
                get {
                    return ((string)(this[this.tableFacturaImpresion.DomicilioColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.DomicilioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Localidad {
                get {
                    return ((string)(this[this.tableFacturaImpresion.LocalidadColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.LocalidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provincia {
                get {
                    return ((string)(this[this.tableFacturaImpresion.ProvinciaColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.ProvinciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodPostal {
                get {
                    return ((string)(this[this.tableFacturaImpresion.CodPostalColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.CodPostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableFacturaImpresion.DescripcionColumn]));
                }
                set {
                    this[this.tableFacturaImpresion.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemitoNull() {
                return this.IsNull(this.tableFacturaImpresion.RemitoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemitoNull() {
                this[this.tableFacturaImpresion.RemitoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrdenCompraNull() {
                return this.IsNull(this.tableFacturaImpresion.OrdenCompraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrdenCompraNull() {
                this[this.tableFacturaImpresion.OrdenCompraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaVtoNull() {
                return this.IsNull(this.tableFacturaImpresion.FechaVtoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaVtoNull() {
                this[this.tableFacturaImpresion.FechaVtoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObservacionesNull() {
                return this.IsNull(this.tableFacturaImpresion.ObservacionesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObservacionesNull() {
                this[this.tableFacturaImpresion.ObservacionesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondicionesNull() {
                return this.IsNull(this.tableFacturaImpresion.CondicionesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondicionesNull() {
                this[this.tableFacturaImpresion.CondicionesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSonPesosNull() {
                return this.IsNull(this.tableFacturaImpresion.SonPesosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSonPesosNull() {
                this[this.tableFacturaImpresion.SonPesosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescuentoNull() {
                return this.IsNull(this.tableFacturaImpresion.DescuentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescuentoNull() {
                this[this.tableFacturaImpresion.DescuentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubtotalNull() {
                return this.IsNull(this.tableFacturaImpresion.SubtotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubtotalNull() {
                this[this.tableFacturaImpresion.SubtotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalIVANull() {
                return this.IsNull(this.tableFacturaImpresion.TotalIVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalIVANull() {
                this[this.tableFacturaImpresion.TotalIVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBajaLogicaNull() {
                return this.IsNull(this.tableFacturaImpresion.BajaLogicaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBajaLogicaNull() {
                this[this.tableFacturaImpresion.BajaLogicaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRazonSocialNull() {
                return this.IsNull(this.tableFacturaImpresion.RazonSocialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRazonSocialNull() {
                this[this.tableFacturaImpresion.RazonSocialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoNull() {
                return this.IsNull(this.tableFacturaImpresion.CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoNull() {
                this[this.tableFacturaImpresion.CodigoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FacturaLineaImpresionRow : global::System.Data.DataRow {
            
            private FacturaLineaImpresionDataTable tableFacturaLineaImpresion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaLineaImpresionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFacturaLineaImpresion = ((FacturaLineaImpresionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idFacturasLinea {
                get {
                    return ((int)(this[this.tableFacturaLineaImpresion.idFacturasLineaColumn]));
                }
                set {
                    this[this.tableFacturaLineaImpresion.idFacturasLineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idFactura {
                get {
                    return ((int)(this[this.tableFacturaLineaImpresion.idFacturaColumn]));
                }
                set {
                    this[this.tableFacturaLineaImpresion.idFacturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idArticulo {
                get {
                    return ((int)(this[this.tableFacturaLineaImpresion.idArticuloColumn]));
                }
                set {
                    this[this.tableFacturaLineaImpresion.idArticuloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad {
                get {
                    return ((decimal)(this[this.tableFacturaLineaImpresion.CantidadColumn]));
                }
                set {
                    this[this.tableFacturaLineaImpresion.CantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    return ((decimal)(this[this.tableFacturaLineaImpresion.PrecioColumn]));
                }
                set {
                    this[this.tableFacturaLineaImpresion.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodigoYColor {
                get {
                    try {
                        return ((string)(this[this.tableFacturaLineaImpresion.CodigoYColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoYColor\' in table \'FacturaLineaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaLineaImpresion.CodigoYColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableFacturaLineaImpresion.DescripcionColumn]));
                }
                set {
                    this[this.tableFacturaLineaImpresion.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalLinea {
                get {
                    try {
                        return ((decimal)(this[this.tableFacturaLineaImpresion.TotalLineaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalLinea\' in table \'FacturaLineaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaLineaImpresion.TotalLineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoYColorNull() {
                return this.IsNull(this.tableFacturaLineaImpresion.CodigoYColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoYColorNull() {
                this[this.tableFacturaLineaImpresion.CodigoYColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalLineaNull() {
                return this.IsNull(this.tableFacturaLineaImpresion.TotalLineaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalLineaNull() {
                this[this.tableFacturaLineaImpresion.TotalLineaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FacturaBLineaImpresionRow : global::System.Data.DataRow {
            
            private FacturaBLineaImpresionDataTable tableFacturaBLineaImpresion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FacturaBLineaImpresionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFacturaBLineaImpresion = ((FacturaBLineaImpresionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idFacturasLinea {
                get {
                    return ((int)(this[this.tableFacturaBLineaImpresion.idFacturasLineaColumn]));
                }
                set {
                    this[this.tableFacturaBLineaImpresion.idFacturasLineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idFactura {
                get {
                    return ((int)(this[this.tableFacturaBLineaImpresion.idFacturaColumn]));
                }
                set {
                    this[this.tableFacturaBLineaImpresion.idFacturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idArticulo {
                get {
                    return ((int)(this[this.tableFacturaBLineaImpresion.idArticuloColumn]));
                }
                set {
                    this[this.tableFacturaBLineaImpresion.idArticuloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad {
                get {
                    return ((decimal)(this[this.tableFacturaBLineaImpresion.CantidadColumn]));
                }
                set {
                    this[this.tableFacturaBLineaImpresion.CantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    try {
                        return ((decimal)(this[this.tableFacturaBLineaImpresion.PrecioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Precio\' in table \'FacturaBLineaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaBLineaImpresion.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodigoYColor {
                get {
                    try {
                        return ((string)(this[this.tableFacturaBLineaImpresion.CodigoYColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoYColor\' in table \'FacturaBLineaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaBLineaImpresion.CodigoYColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableFacturaBLineaImpresion.DescripcionColumn]));
                }
                set {
                    this[this.tableFacturaBLineaImpresion.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalLinea {
                get {
                    try {
                        return ((decimal)(this[this.tableFacturaBLineaImpresion.TotalLineaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalLinea\' in table \'FacturaBLineaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFacturaBLineaImpresion.TotalLineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecioNull() {
                return this.IsNull(this.tableFacturaBLineaImpresion.PrecioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecioNull() {
                this[this.tableFacturaBLineaImpresion.PrecioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoYColorNull() {
                return this.IsNull(this.tableFacturaBLineaImpresion.CodigoYColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoYColorNull() {
                this[this.tableFacturaBLineaImpresion.CodigoYColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalLineaNull() {
                return this.IsNull(this.tableFacturaBLineaImpresion.TotalLineaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalLineaNull() {
                this[this.tableFacturaBLineaImpresion.TotalLineaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RemitoImpresionRow : global::System.Data.DataRow {
            
            private RemitoImpresionDataTable tableRemitoImpresion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RemitoImpresionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRemitoImpresion = ((RemitoImpresionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idRemito {
                get {
                    return ((int)(this[this.tableRemitoImpresion.idRemitoColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.idRemitoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idCliente {
                get {
                    return ((int)(this[this.tableRemitoImpresion.idClienteColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaEmision {
                get {
                    return ((global::System.DateTime)(this[this.tableRemitoImpresion.FechaEmisionColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.FechaEmisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero {
                get {
                    return ((string)(this[this.tableRemitoImpresion.NumeroColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idTransportista {
                get {
                    try {
                        return ((int)(this[this.tableRemitoImpresion.idTransportistaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idTransportista\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.idTransportistaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DomicilioEntrega {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.DomicilioEntregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DomicilioEntrega\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.DomicilioEntregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalidadEntrega {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.LocalidadEntregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalidadEntrega\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.LocalidadEntregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProvinciaEntrega {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.ProvinciaEntregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvinciaEntrega\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.ProvinciaEntregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodPostalEntrega {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.CodPostalEntregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodPostalEntrega\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.CodPostalEntregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CantBultos {
                get {
                    return ((int)(this[this.tableRemitoImpresion.CantBultosColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.CantBultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrdenCompra {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.OrdenCompraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrdenCompra\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.OrdenCompraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaVto {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRemitoImpresion.FechaVtoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaVto\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.FechaVtoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.ObservacionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Observaciones\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.ObservacionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    return ((decimal)(this[this.tableRemitoImpresion.TotalColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idEstado {
                get {
                    return ((int)(this[this.tableRemitoImpresion.idEstadoColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.idEstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BajaLogica {
                get {
                    try {
                        return ((bool)(this[this.tableRemitoImpresion.BajaLogicaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BajaLogica\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.BajaLogicaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RazonSocial {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.RazonSocialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RazonSocial\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.RazonSocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUIT {
                get {
                    return ((string)(this[this.tableRemitoImpresion.CUITColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.CUITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombreTransp {
                get {
                    return ((string)(this[this.tableRemitoImpresion.NombreTranspColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.NombreTranspColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUITTransp {
                get {
                    return ((string)(this[this.tableRemitoImpresion.CUITTranspColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.CUITTranspColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DomicilioTransp {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.DomicilioTranspColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DomicilioTransp\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.DomicilioTranspColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalidadTransp {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.LocalidadTranspColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalidadTransp\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.LocalidadTranspColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodPostalTransp {
                get {
                    try {
                        return ((string)(this[this.tableRemitoImpresion.CodPostalTranspColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodPostalTransp\' in table \'RemitoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoImpresion.CodPostalTranspColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClienteIVA {
                get {
                    return ((string)(this[this.tableRemitoImpresion.ClienteIVAColumn]));
                }
                set {
                    this[this.tableRemitoImpresion.ClienteIVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidTransportistaNull() {
                return this.IsNull(this.tableRemitoImpresion.idTransportistaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidTransportistaNull() {
                this[this.tableRemitoImpresion.idTransportistaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDomicilioEntregaNull() {
                return this.IsNull(this.tableRemitoImpresion.DomicilioEntregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDomicilioEntregaNull() {
                this[this.tableRemitoImpresion.DomicilioEntregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalidadEntregaNull() {
                return this.IsNull(this.tableRemitoImpresion.LocalidadEntregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalidadEntregaNull() {
                this[this.tableRemitoImpresion.LocalidadEntregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvinciaEntregaNull() {
                return this.IsNull(this.tableRemitoImpresion.ProvinciaEntregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvinciaEntregaNull() {
                this[this.tableRemitoImpresion.ProvinciaEntregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodPostalEntregaNull() {
                return this.IsNull(this.tableRemitoImpresion.CodPostalEntregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodPostalEntregaNull() {
                this[this.tableRemitoImpresion.CodPostalEntregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrdenCompraNull() {
                return this.IsNull(this.tableRemitoImpresion.OrdenCompraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrdenCompraNull() {
                this[this.tableRemitoImpresion.OrdenCompraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaVtoNull() {
                return this.IsNull(this.tableRemitoImpresion.FechaVtoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaVtoNull() {
                this[this.tableRemitoImpresion.FechaVtoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObservacionesNull() {
                return this.IsNull(this.tableRemitoImpresion.ObservacionesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObservacionesNull() {
                this[this.tableRemitoImpresion.ObservacionesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBajaLogicaNull() {
                return this.IsNull(this.tableRemitoImpresion.BajaLogicaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBajaLogicaNull() {
                this[this.tableRemitoImpresion.BajaLogicaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRazonSocialNull() {
                return this.IsNull(this.tableRemitoImpresion.RazonSocialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRazonSocialNull() {
                this[this.tableRemitoImpresion.RazonSocialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDomicilioTranspNull() {
                return this.IsNull(this.tableRemitoImpresion.DomicilioTranspColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDomicilioTranspNull() {
                this[this.tableRemitoImpresion.DomicilioTranspColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalidadTranspNull() {
                return this.IsNull(this.tableRemitoImpresion.LocalidadTranspColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalidadTranspNull() {
                this[this.tableRemitoImpresion.LocalidadTranspColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodPostalTranspNull() {
                return this.IsNull(this.tableRemitoImpresion.CodPostalTranspColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodPostalTranspNull() {
                this[this.tableRemitoImpresion.CodPostalTranspColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RemitoLineaImpresionRow : global::System.Data.DataRow {
            
            private RemitoLineaImpresionDataTable tableRemitoLineaImpresion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RemitoLineaImpresionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRemitoLineaImpresion = ((RemitoLineaImpresionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idRemitosLinea {
                get {
                    return ((int)(this[this.tableRemitoLineaImpresion.idRemitosLineaColumn]));
                }
                set {
                    this[this.tableRemitoLineaImpresion.idRemitosLineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idRemito {
                get {
                    return ((int)(this[this.tableRemitoLineaImpresion.idRemitoColumn]));
                }
                set {
                    this[this.tableRemitoLineaImpresion.idRemitoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idArticulo {
                get {
                    return ((int)(this[this.tableRemitoLineaImpresion.idArticuloColumn]));
                }
                set {
                    this[this.tableRemitoLineaImpresion.idArticuloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Envases {
                get {
                    return ((decimal)(this[this.tableRemitoLineaImpresion.EnvasesColumn]));
                }
                set {
                    this[this.tableRemitoLineaImpresion.EnvasesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad {
                get {
                    return ((decimal)(this[this.tableRemitoLineaImpresion.CantidadColumn]));
                }
                set {
                    this[this.tableRemitoLineaImpresion.CantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    return ((decimal)(this[this.tableRemitoLineaImpresion.PrecioColumn]));
                }
                set {
                    this[this.tableRemitoLineaImpresion.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodigoYColor {
                get {
                    try {
                        return ((string)(this[this.tableRemitoLineaImpresion.CodigoYColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoYColor\' in table \'RemitoLineaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoLineaImpresion.CodigoYColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableRemitoLineaImpresion.DescripcionColumn]));
                }
                set {
                    this[this.tableRemitoLineaImpresion.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalLinea {
                get {
                    try {
                        return ((decimal)(this[this.tableRemitoLineaImpresion.TotalLineaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalLinea\' in table \'RemitoLineaImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRemitoLineaImpresion.TotalLineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoYColorNull() {
                return this.IsNull(this.tableRemitoLineaImpresion.CodigoYColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoYColorNull() {
                this[this.tableRemitoLineaImpresion.CodigoYColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalLineaNull() {
                return this.IsNull(this.tableRemitoLineaImpresion.TotalLineaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalLineaNull() {
                this[this.tableRemitoLineaImpresion.TotalLineaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PresupuestoImpresionRow : global::System.Data.DataRow {
            
            private PresupuestoImpresionDataTable tablePresupuestoImpresion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PresupuestoImpresionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePresupuestoImpresion = ((PresupuestoImpresionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idPresupuesto {
                get {
                    return ((int)(this[this.tablePresupuestoImpresion.idPresupuestoColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresion.idPresupuestoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idCliente {
                get {
                    return ((int)(this[this.tablePresupuestoImpresion.idClienteColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresion.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaEmision {
                get {
                    return ((global::System.DateTime)(this[this.tablePresupuestoImpresion.FechaEmisionColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresion.FechaEmisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero {
                get {
                    return ((string)(this[this.tablePresupuestoImpresion.NumeroColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresion.NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaVto {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePresupuestoImpresion.FechaVtoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaVto\' in table \'PresupuestoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.FechaVtoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condiciones {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresion.CondicionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Condiciones\' in table \'PresupuestoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.CondicionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disponibilidad {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresion.DisponibilidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disponibilidad\' in table \'PresupuestoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.DisponibilidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DomicilioEntrega {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresion.DomicilioEntregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DomicilioEntrega\' in table \'PresupuestoImpresion\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.DomicilioEntregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalidadEntrega {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresion.LocalidadEntregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalidadEntrega\' in table \'PresupuestoImpresion\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.LocalidadEntregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProvinciaEntrega {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresion.ProvinciaEntregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvinciaEntrega\' in table \'PresupuestoImpresion\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.ProvinciaEntregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodPostalEntrega {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresion.CodPostalEntregaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodPostalEntrega\' in table \'PresupuestoImpresion\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.CodPostalEntregaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    return ((decimal)(this[this.tablePresupuestoImpresion.TotalColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresion.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Descuento {
                get {
                    try {
                        return ((decimal)(this[this.tablePresupuestoImpresion.DescuentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descuento\' in table \'PresupuestoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.DescuentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Subtotal {
                get {
                    try {
                        return ((decimal)(this[this.tablePresupuestoImpresion.SubtotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subtotal\' in table \'PresupuestoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.SubtotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalIVA {
                get {
                    try {
                        return ((decimal)(this[this.tablePresupuestoImpresion.TotalIVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalIVA\' in table \'PresupuestoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.TotalIVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalNeto {
                get {
                    return ((decimal)(this[this.tablePresupuestoImpresion.TotalNetoColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresion.TotalNetoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idEstado {
                get {
                    return ((int)(this[this.tablePresupuestoImpresion.idEstadoColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresion.idEstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BajaLogica {
                get {
                    try {
                        return ((bool)(this[this.tablePresupuestoImpresion.BajaLogicaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BajaLogica\' in table \'PresupuestoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.BajaLogicaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RazonSocial {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresion.RazonSocialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RazonSocial\' in table \'PresupuestoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.RazonSocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUIT {
                get {
                    return ((string)(this[this.tablePresupuestoImpresion.CUITColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresion.CUITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Codigo {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresion.CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Codigo\' in table \'PresupuestoImpresion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresion.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaVtoNull() {
                return this.IsNull(this.tablePresupuestoImpresion.FechaVtoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaVtoNull() {
                this[this.tablePresupuestoImpresion.FechaVtoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondicionesNull() {
                return this.IsNull(this.tablePresupuestoImpresion.CondicionesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondicionesNull() {
                this[this.tablePresupuestoImpresion.CondicionesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisponibilidadNull() {
                return this.IsNull(this.tablePresupuestoImpresion.DisponibilidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisponibilidadNull() {
                this[this.tablePresupuestoImpresion.DisponibilidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDomicilioEntregaNull() {
                return this.IsNull(this.tablePresupuestoImpresion.DomicilioEntregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDomicilioEntregaNull() {
                this[this.tablePresupuestoImpresion.DomicilioEntregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalidadEntregaNull() {
                return this.IsNull(this.tablePresupuestoImpresion.LocalidadEntregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalidadEntregaNull() {
                this[this.tablePresupuestoImpresion.LocalidadEntregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvinciaEntregaNull() {
                return this.IsNull(this.tablePresupuestoImpresion.ProvinciaEntregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvinciaEntregaNull() {
                this[this.tablePresupuestoImpresion.ProvinciaEntregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodPostalEntregaNull() {
                return this.IsNull(this.tablePresupuestoImpresion.CodPostalEntregaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodPostalEntregaNull() {
                this[this.tablePresupuestoImpresion.CodPostalEntregaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescuentoNull() {
                return this.IsNull(this.tablePresupuestoImpresion.DescuentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescuentoNull() {
                this[this.tablePresupuestoImpresion.DescuentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubtotalNull() {
                return this.IsNull(this.tablePresupuestoImpresion.SubtotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubtotalNull() {
                this[this.tablePresupuestoImpresion.SubtotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalIVANull() {
                return this.IsNull(this.tablePresupuestoImpresion.TotalIVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalIVANull() {
                this[this.tablePresupuestoImpresion.TotalIVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBajaLogicaNull() {
                return this.IsNull(this.tablePresupuestoImpresion.BajaLogicaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBajaLogicaNull() {
                this[this.tablePresupuestoImpresion.BajaLogicaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRazonSocialNull() {
                return this.IsNull(this.tablePresupuestoImpresion.RazonSocialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRazonSocialNull() {
                this[this.tablePresupuestoImpresion.RazonSocialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoNull() {
                return this.IsNull(this.tablePresupuestoImpresion.CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoNull() {
                this[this.tablePresupuestoImpresion.CodigoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PresupuestoImpresionCabeceraRow : global::System.Data.DataRow {
            
            private PresupuestoImpresionCabeceraDataTable tablePresupuestoImpresionCabecera;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PresupuestoImpresionCabeceraRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePresupuestoImpresionCabecera = ((PresupuestoImpresionCabeceraDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idEmpresa {
                get {
                    return ((int)(this[this.tablePresupuestoImpresionCabecera.idEmpresaColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.idEmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RazonSocial {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresionCabecera.RazonSocialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RazonSocial\' in table \'PresupuestoImpresionCabecera\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.RazonSocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresionCabecera.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre\' in table \'PresupuestoImpresionCabecera\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Apellido {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresionCabecera.ApellidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Apellido\' in table \'PresupuestoImpresionCabecera\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.ApellidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUIT {
                get {
                    return ((string)(this[this.tablePresupuestoImpresionCabecera.CUITColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.CUITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idCondicionIVA {
                get {
                    return ((int)(this[this.tablePresupuestoImpresionCabecera.idCondicionIVAColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.idCondicionIVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Domicilio {
                get {
                    return ((string)(this[this.tablePresupuestoImpresionCabecera.DomicilioColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.DomicilioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Localidad {
                get {
                    return ((string)(this[this.tablePresupuestoImpresionCabecera.LocalidadColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.LocalidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provincia {
                get {
                    return ((string)(this[this.tablePresupuestoImpresionCabecera.ProvinciaColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.ProvinciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodPostal {
                get {
                    return ((string)(this[this.tablePresupuestoImpresionCabecera.CodPostalColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.CodPostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telefono {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresionCabecera.TelefonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telefono\' in table \'PresupuestoImpresionCabecera\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.TelefonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresionCabecera.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'PresupuestoImpresionCabecera\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InicioActividades {
                get {
                    return ((global::System.DateTime)(this[this.tablePresupuestoImpresionCabecera.InicioActividadesColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.InicioActividadesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IngBrutos {
                get {
                    return ((string)(this[this.tablePresupuestoImpresionCabecera.IngBrutosColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.IngBrutosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresionCabecera.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'PresupuestoImpresionCabecera\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Web {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresionCabecera.WebColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Web\' in table \'PresupuestoImpresionCabecera\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.WebColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PorcentajeIVA {
                get {
                    try {
                        return ((decimal)(this[this.tablePresupuestoImpresionCabecera.PorcentajeIVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PorcentajeIVA\' in table \'PresupuestoImpresionCabecera\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.PorcentajeIVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contrasenia {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoImpresionCabecera.ContraseniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contrasenia\' in table \'PresupuestoImpresionCabecera\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.ContraseniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IVA {
                get {
                    return ((string)(this[this.tablePresupuestoImpresionCabecera.IVAColumn]));
                }
                set {
                    this[this.tablePresupuestoImpresionCabecera.IVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRazonSocialNull() {
                return this.IsNull(this.tablePresupuestoImpresionCabecera.RazonSocialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRazonSocialNull() {
                this[this.tablePresupuestoImpresionCabecera.RazonSocialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tablePresupuestoImpresionCabecera.NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tablePresupuestoImpresionCabecera.NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApellidoNull() {
                return this.IsNull(this.tablePresupuestoImpresionCabecera.ApellidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApellidoNull() {
                this[this.tablePresupuestoImpresionCabecera.ApellidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefonoNull() {
                return this.IsNull(this.tablePresupuestoImpresionCabecera.TelefonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefonoNull() {
                this[this.tablePresupuestoImpresionCabecera.TelefonoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tablePresupuestoImpresionCabecera.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tablePresupuestoImpresionCabecera.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tablePresupuestoImpresionCabecera.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tablePresupuestoImpresionCabecera.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebNull() {
                return this.IsNull(this.tablePresupuestoImpresionCabecera.WebColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebNull() {
                this[this.tablePresupuestoImpresionCabecera.WebColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentajeIVANull() {
                return this.IsNull(this.tablePresupuestoImpresionCabecera.PorcentajeIVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentajeIVANull() {
                this[this.tablePresupuestoImpresionCabecera.PorcentajeIVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContraseniaNull() {
                return this.IsNull(this.tablePresupuestoImpresionCabecera.ContraseniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContraseniaNull() {
                this[this.tablePresupuestoImpresionCabecera.ContraseniaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PresupuestoLineaImpresionRow : global::System.Data.DataRow {
            
            private PresupuestoLineaImpresionDataTable tablePresupuestoLineaImpresion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PresupuestoLineaImpresionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePresupuestoLineaImpresion = ((PresupuestoLineaImpresionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idPresupuestosLinea {
                get {
                    return ((int)(this[this.tablePresupuestoLineaImpresion.idPresupuestosLineaColumn]));
                }
                set {
                    this[this.tablePresupuestoLineaImpresion.idPresupuestosLineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idPresupuesto {
                get {
                    return ((int)(this[this.tablePresupuestoLineaImpresion.idPresupuestoColumn]));
                }
                set {
                    this[this.tablePresupuestoLineaImpresion.idPresupuestoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idArticulo {
                get {
                    return ((int)(this[this.tablePresupuestoLineaImpresion.idArticuloColumn]));
                }
                set {
                    this[this.tablePresupuestoLineaImpresion.idArticuloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cantidad {
                get {
                    return ((int)(this[this.tablePresupuestoLineaImpresion.CantidadColumn]));
                }
                set {
                    this[this.tablePresupuestoLineaImpresion.CantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    return ((decimal)(this[this.tablePresupuestoLineaImpresion.PrecioColumn]));
                }
                set {
                    this[this.tablePresupuestoLineaImpresion.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodigoYColor {
                get {
                    try {
                        return ((string)(this[this.tablePresupuestoLineaImpresion.CodigoYColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoYColor\' in table \'PresupuestoLineaImpresion\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePresupuestoLineaImpresion.CodigoYColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tablePresupuestoLineaImpresion.DescripcionColumn]));
                }
                set {
                    this[this.tablePresupuestoLineaImpresion.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalLinea {
                get {
                    try {
                        return ((decimal)(this[this.tablePresupuestoLineaImpresion.TotalLineaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalLinea\' in table \'PresupuestoLineaImpresion\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePresupuestoLineaImpresion.TotalLineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoYColorNull() {
                return this.IsNull(this.tablePresupuestoLineaImpresion.CodigoYColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoYColorNull() {
                this[this.tablePresupuestoLineaImpresion.CodigoYColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalLineaNull() {
                return this.IsNull(this.tablePresupuestoLineaImpresion.TotalLineaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalLineaNull() {
                this[this.tablePresupuestoLineaImpresion.TotalLineaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FacturaImpresionRowChangeEvent : global::System.EventArgs {
            
            private FacturaImpresionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaImpresionRowChangeEvent(FacturaImpresionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaImpresionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FacturaLineaImpresionRowChangeEvent : global::System.EventArgs {
            
            private FacturaLineaImpresionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaLineaImpresionRowChangeEvent(FacturaLineaImpresionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaLineaImpresionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FacturaBLineaImpresionRowChangeEvent : global::System.EventArgs {
            
            private FacturaBLineaImpresionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaBLineaImpresionRowChangeEvent(FacturaBLineaImpresionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FacturaBLineaImpresionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RemitoImpresionRowChangeEvent : global::System.EventArgs {
            
            private RemitoImpresionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoImpresionRowChangeEvent(RemitoImpresionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoImpresionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RemitoLineaImpresionRowChangeEvent : global::System.EventArgs {
            
            private RemitoLineaImpresionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoLineaImpresionRowChangeEvent(RemitoLineaImpresionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RemitoLineaImpresionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PresupuestoImpresionRowChangeEvent : global::System.EventArgs {
            
            private PresupuestoImpresionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionRowChangeEvent(PresupuestoImpresionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PresupuestoImpresionCabeceraRowChangeEvent : global::System.EventArgs {
            
            private PresupuestoImpresionCabeceraRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionCabeceraRowChangeEvent(PresupuestoImpresionCabeceraRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoImpresionCabeceraRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PresupuestoLineaImpresionRowChangeEvent : global::System.EventArgs {
            
            private PresupuestoLineaImpresionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoLineaImpresionRowChangeEvent(PresupuestoLineaImpresionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PresupuestoLineaImpresionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ConexcoFacturación.ConexcoImpresionDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FacturaImpresionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FacturaImpresionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FacturaImpresion";
            tableMapping.ColumnMappings.Add("idFactura", "idFactura");
            tableMapping.ColumnMappings.Add("idCliente", "idCliente");
            tableMapping.ColumnMappings.Add("idDomicilioCliente", "idDomicilioCliente");
            tableMapping.ColumnMappings.Add("FechaEmision", "FechaEmision");
            tableMapping.ColumnMappings.Add("idTipoDocumento", "idTipoDocumento");
            tableMapping.ColumnMappings.Add("Numero", "Numero");
            tableMapping.ColumnMappings.Add("Remito", "Remito");
            tableMapping.ColumnMappings.Add("OrdenCompra", "OrdenCompra");
            tableMapping.ColumnMappings.Add("FechaVto", "FechaVto");
            tableMapping.ColumnMappings.Add("Observaciones", "Observaciones");
            tableMapping.ColumnMappings.Add("Condiciones", "Condiciones");
            tableMapping.ColumnMappings.Add("SonPesos", "SonPesos");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("Descuento", "Descuento");
            tableMapping.ColumnMappings.Add("Subtotal", "Subtotal");
            tableMapping.ColumnMappings.Add("TotalIVA", "TotalIVA");
            tableMapping.ColumnMappings.Add("TotalNeto", "TotalNeto");
            tableMapping.ColumnMappings.Add("idEstado", "idEstado");
            tableMapping.ColumnMappings.Add("BajaLogica", "BajaLogica");
            tableMapping.ColumnMappings.Add("RazonSocial", "RazonSocial");
            tableMapping.ColumnMappings.Add("CUIT", "CUIT");
            tableMapping.ColumnMappings.Add("Codigo", "Codigo");
            tableMapping.ColumnMappings.Add("Domicilio", "Domicilio");
            tableMapping.ColumnMappings.Add("Localidad", "Localidad");
            tableMapping.ColumnMappings.Add("Provincia", "Provincia");
            tableMapping.ColumnMappings.Add("CodPostal", "CodPostal");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConexcoFacturación.Properties.Settings.Default.ConexcoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.FacturaImpresion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdFactura", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ConexcoImpresionDataSet.FacturaImpresionDataTable dataTable, global::System.Nullable<int> IdFactura) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdFactura.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdFactura.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ConexcoImpresionDataSet.FacturaImpresionDataTable GetData(global::System.Nullable<int> IdFactura) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdFactura.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdFactura.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ConexcoImpresionDataSet.FacturaImpresionDataTable dataTable = new ConexcoImpresionDataSet.FacturaImpresionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FacturaLineaImpresionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FacturaLineaImpresionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FacturaLineaImpresion";
            tableMapping.ColumnMappings.Add("idFacturasLinea", "idFacturasLinea");
            tableMapping.ColumnMappings.Add("idFactura", "idFactura");
            tableMapping.ColumnMappings.Add("idArticulo", "idArticulo");
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("CodigoYColor", "CodigoYColor");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("TotalLinea", "TotalLinea");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConexcoFacturación.Properties.Settings.Default.ConexcoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.FacturaLineaImpresion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdFactura", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ConexcoImpresionDataSet.FacturaLineaImpresionDataTable dataTable, global::System.Nullable<int> IdFactura) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdFactura.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdFactura.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ConexcoImpresionDataSet.FacturaLineaImpresionDataTable GetData(global::System.Nullable<int> IdFactura) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdFactura.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdFactura.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ConexcoImpresionDataSet.FacturaLineaImpresionDataTable dataTable = new ConexcoImpresionDataSet.FacturaLineaImpresionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FacturaBLineaImpresionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FacturaBLineaImpresionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FacturaBLineaImpresion";
            tableMapping.ColumnMappings.Add("idFacturasLinea", "idFacturasLinea");
            tableMapping.ColumnMappings.Add("idFactura", "idFactura");
            tableMapping.ColumnMappings.Add("idArticulo", "idArticulo");
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("CodigoYColor", "CodigoYColor");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("TotalLinea", "TotalLinea");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConexcoFacturación.Properties.Settings.Default.ConexcoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.FacturaBLineaImpresion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdFactura", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ConexcoImpresionDataSet.FacturaBLineaImpresionDataTable dataTable, global::System.Nullable<int> IdFactura) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdFactura.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdFactura.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ConexcoImpresionDataSet.FacturaBLineaImpresionDataTable GetData(global::System.Nullable<int> IdFactura) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdFactura.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdFactura.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ConexcoImpresionDataSet.FacturaBLineaImpresionDataTable dataTable = new ConexcoImpresionDataSet.FacturaBLineaImpresionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RemitoImpresionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RemitoImpresionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RemitoImpresion";
            tableMapping.ColumnMappings.Add("idRemito", "idRemito");
            tableMapping.ColumnMappings.Add("idCliente", "idCliente");
            tableMapping.ColumnMappings.Add("FechaEmision", "FechaEmision");
            tableMapping.ColumnMappings.Add("Numero", "Numero");
            tableMapping.ColumnMappings.Add("idTransportista", "idTransportista");
            tableMapping.ColumnMappings.Add("DomicilioEntrega", "DomicilioEntrega");
            tableMapping.ColumnMappings.Add("LocalidadEntrega", "LocalidadEntrega");
            tableMapping.ColumnMappings.Add("ProvinciaEntrega", "ProvinciaEntrega");
            tableMapping.ColumnMappings.Add("CodPostalEntrega", "CodPostalEntrega");
            tableMapping.ColumnMappings.Add("CantBultos", "CantBultos");
            tableMapping.ColumnMappings.Add("OrdenCompra", "OrdenCompra");
            tableMapping.ColumnMappings.Add("FechaVto", "FechaVto");
            tableMapping.ColumnMappings.Add("Observaciones", "Observaciones");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("idEstado", "idEstado");
            tableMapping.ColumnMappings.Add("BajaLogica", "BajaLogica");
            tableMapping.ColumnMappings.Add("RazonSocial", "RazonSocial");
            tableMapping.ColumnMappings.Add("CUIT", "CUIT");
            tableMapping.ColumnMappings.Add("NombreTransp", "NombreTransp");
            tableMapping.ColumnMappings.Add("CUITTransp", "CUITTransp");
            tableMapping.ColumnMappings.Add("DomicilioTransp", "DomicilioTransp");
            tableMapping.ColumnMappings.Add("LocalidadTransp", "LocalidadTransp");
            tableMapping.ColumnMappings.Add("CodPostalTransp", "CodPostalTransp");
            tableMapping.ColumnMappings.Add("ClienteIVA", "ClienteIVA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConexcoFacturación.Properties.Settings.Default.ConexcoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.RemitoImpresion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRemito", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ConexcoImpresionDataSet.RemitoImpresionDataTable dataTable, global::System.Nullable<int> IdRemito) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdRemito.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdRemito.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ConexcoImpresionDataSet.RemitoImpresionDataTable GetData(global::System.Nullable<int> IdRemito) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdRemito.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdRemito.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ConexcoImpresionDataSet.RemitoImpresionDataTable dataTable = new ConexcoImpresionDataSet.RemitoImpresionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RemitoLineaImpresionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RemitoLineaImpresionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RemitoLineaImpresion";
            tableMapping.ColumnMappings.Add("idRemitosLinea", "idRemitosLinea");
            tableMapping.ColumnMappings.Add("idRemito", "idRemito");
            tableMapping.ColumnMappings.Add("idArticulo", "idArticulo");
            tableMapping.ColumnMappings.Add("Envases", "Envases");
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("CodigoYColor", "CodigoYColor");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("TotalLinea", "TotalLinea");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConexcoFacturación.Properties.Settings.Default.ConexcoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.RemitoLineaImpresion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdRemito", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ConexcoImpresionDataSet.RemitoLineaImpresionDataTable dataTable, global::System.Nullable<int> IdRemito) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdRemito.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdRemito.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ConexcoImpresionDataSet.RemitoLineaImpresionDataTable GetData(global::System.Nullable<int> IdRemito) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdRemito.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdRemito.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ConexcoImpresionDataSet.RemitoLineaImpresionDataTable dataTable = new ConexcoImpresionDataSet.RemitoLineaImpresionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PresupuestoImpresionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PresupuestoImpresionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PresupuestoImpresion";
            tableMapping.ColumnMappings.Add("idPresupuesto", "idPresupuesto");
            tableMapping.ColumnMappings.Add("idCliente", "idCliente");
            tableMapping.ColumnMappings.Add("FechaEmision", "FechaEmision");
            tableMapping.ColumnMappings.Add("Numero", "Numero");
            tableMapping.ColumnMappings.Add("FechaVto", "FechaVto");
            tableMapping.ColumnMappings.Add("Condiciones", "Condiciones");
            tableMapping.ColumnMappings.Add("Disponibilidad", "Disponibilidad");
            tableMapping.ColumnMappings.Add("DomicilioEntrega", "DomicilioEntrega");
            tableMapping.ColumnMappings.Add("LocalidadEntrega", "LocalidadEntrega");
            tableMapping.ColumnMappings.Add("ProvinciaEntrega", "ProvinciaEntrega");
            tableMapping.ColumnMappings.Add("CodPostalEntrega", "CodPostalEntrega");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("Descuento", "Descuento");
            tableMapping.ColumnMappings.Add("Subtotal", "Subtotal");
            tableMapping.ColumnMappings.Add("TotalIVA", "TotalIVA");
            tableMapping.ColumnMappings.Add("TotalNeto", "TotalNeto");
            tableMapping.ColumnMappings.Add("idEstado", "idEstado");
            tableMapping.ColumnMappings.Add("BajaLogica", "BajaLogica");
            tableMapping.ColumnMappings.Add("RazonSocial", "RazonSocial");
            tableMapping.ColumnMappings.Add("CUIT", "CUIT");
            tableMapping.ColumnMappings.Add("Codigo", "Codigo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConexcoFacturación.Properties.Settings.Default.ConexcoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.PresupuestoImpresion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdPresupuesto", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ConexcoImpresionDataSet.PresupuestoImpresionDataTable dataTable, global::System.Nullable<int> IdPresupuesto) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdPresupuesto.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdPresupuesto.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ConexcoImpresionDataSet.PresupuestoImpresionDataTable GetData(global::System.Nullable<int> IdPresupuesto) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdPresupuesto.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdPresupuesto.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ConexcoImpresionDataSet.PresupuestoImpresionDataTable dataTable = new ConexcoImpresionDataSet.PresupuestoImpresionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PresupuestoImpresionCabeceraTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PresupuestoImpresionCabeceraTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PresupuestoImpresionCabecera";
            tableMapping.ColumnMappings.Add("idEmpresa", "idEmpresa");
            tableMapping.ColumnMappings.Add("RazonSocial", "RazonSocial");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("Apellido", "Apellido");
            tableMapping.ColumnMappings.Add("CUIT", "CUIT");
            tableMapping.ColumnMappings.Add("idCondicionIVA", "idCondicionIVA");
            tableMapping.ColumnMappings.Add("Domicilio", "Domicilio");
            tableMapping.ColumnMappings.Add("Localidad", "Localidad");
            tableMapping.ColumnMappings.Add("Provincia", "Provincia");
            tableMapping.ColumnMappings.Add("CodPostal", "CodPostal");
            tableMapping.ColumnMappings.Add("Telefono", "Telefono");
            tableMapping.ColumnMappings.Add("Fax", "Fax");
            tableMapping.ColumnMappings.Add("InicioActividades", "InicioActividades");
            tableMapping.ColumnMappings.Add("IngBrutos", "IngBrutos");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Web", "Web");
            tableMapping.ColumnMappings.Add("PorcentajeIVA", "PorcentajeIVA");
            tableMapping.ColumnMappings.Add("Contrasenia", "Contrasenia");
            tableMapping.ColumnMappings.Add("IVA", "IVA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConexcoFacturación.Properties.Settings.Default.ConexcoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.PresupuestoImpresionCabecera";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ConexcoImpresionDataSet.PresupuestoImpresionCabeceraDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ConexcoImpresionDataSet.PresupuestoImpresionCabeceraDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ConexcoImpresionDataSet.PresupuestoImpresionCabeceraDataTable dataTable = new ConexcoImpresionDataSet.PresupuestoImpresionCabeceraDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PresupuestoLineaImpresionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PresupuestoLineaImpresionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PresupuestoLineaImpresion";
            tableMapping.ColumnMappings.Add("idPresupuestosLinea", "idPresupuestosLinea");
            tableMapping.ColumnMappings.Add("idPresupuesto", "idPresupuesto");
            tableMapping.ColumnMappings.Add("idArticulo", "idArticulo");
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("CodigoYColor", "CodigoYColor");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("TotalLinea", "TotalLinea");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConexcoFacturación.Properties.Settings.Default.ConexcoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.PresupuestoLineaImpresion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdPresupuesto", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ConexcoImpresionDataSet.PresupuestoLineaImpresionDataTable dataTable, global::System.Nullable<int> IdPresupuesto) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdPresupuesto.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdPresupuesto.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ConexcoImpresionDataSet.PresupuestoLineaImpresionDataTable GetData(global::System.Nullable<int> IdPresupuesto) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((IdPresupuesto.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(IdPresupuesto.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ConexcoImpresionDataSet.PresupuestoLineaImpresionDataTable dataTable = new ConexcoImpresionDataSet.PresupuestoLineaImpresionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(ConexcoImpresionDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(ConexcoImpresionDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(ConexcoImpresionDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(ConexcoImpresionDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591